{"resourceType":"Library","id":"HepBAdultForecasting","text":{"status":"generated","div":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><h2>Participants</h2><table class=\"grid\"><tr><td>Author</td><td>Daryl Chertcoff</td></tr><tr><td>Author</td><td>Bryn Rhodes</td></tr></table><h2>Related Artifacts</h2><table class=\"grid\"><tr><td>documentation</td><td>Immunization Calculation Engine - Hep B Vaccine Group - Hep B 2-dose Adult Series</td><td>https://cdsframework.atlassian.net/wiki/spaces/ICE/pages/14352491/Hep+B+Vaccine+Group#HepBVaccineGroup-ImmunizationSeries:HepB2-doseAdultSeries</td></tr><tr><td>documentation</td><td>CDC MMWR Vol.67 / No.1 : Prevention of Hepatitis B Virus Infection in the United States: Recommendations of the Advisory Committee on Immunization Practices</td><td>http://www.cdc.gov/mmwr/volumes/67/rr/pdfs/rr6701-H.PDF</td></tr><tr><td>documentation</td><td>April 2018 Recommendations for the use of adjuvanted hepatitis B vaccine (Heplisav-B, Dynavax)</td><td>https://www.cdc.gov/mmwr/volumes/67/wr/pdfs/mm6715a5-H.pdf</td></tr><tr><td>depends-on</td><td/><td><code>http://hl7.org/fhir/Library/FHIR-ModelInfo|4.0.1</code></td></tr><tr><td>depends-on</td><td/><td><code>http://hl7.org/fhir/Library/FHIRHelpers|4.0.1</code></td></tr><tr><td>depends-on</td><td/><td><a href=\"https://terminology.hl7.org/1.0.0//CodeSystem-CVX.html\">PH_VaccinesAdministeredCVX_CDC_NIP</a></td></tr><tr><td>depends-on</td><td/><td><a href=\"https://terminology.hl7.org/1.0.0//CodeSystem-immunization-evaluation-dose-status.html\">Immunization Evaluation Dose Status codes</a></td></tr><tr><td>depends-on</td><td/><td><code>http://example.org/fhir/uv/cpg/ValueSet/all-hepb-vaccines</code></td></tr></table><h2>Parameters</h2><table class=\"grid\"><tr><td>Patient</td><td>out</td><td>0</td><td>1</td><td>Patient</td></tr><tr><td>PatientBirthDate</td><td>out</td><td>0</td><td>1</td><td>date</td></tr><tr><td>Age in Days when Patient is 18 Years minus 4 Days</td><td>out</td><td>0</td><td>1</td><td>integer</td></tr><tr><td>Patient is 18 Years Minus 4 Days or Older</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>No Hep B Shots were Administered before 18 Years minus 4 Days of Age</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Hep B Vaccine, Adjuvanted Immunization</td><td>out</td><td>0</td><td>*</td><td>Immunization</td></tr><tr><td>First Valid Hep B Adjuvanted Adult Dose</td><td>out</td><td>0</td><td>1</td><td>Immunization</td></tr><tr><td>There Exists a Valid First Hep B Adjuvanted Dose</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>There Exists a Valid Second Hep B Adjuvanted Dose</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Patient Hep B Immunization History should be Evaluated in Adult Series</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Get Recommendation Overview</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>A Forecast for Hep B Adult Dose 1 Should be Made</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>A Forecast for Hep B Adult Dose 2 Should be Made</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Most Recent Hep B Adjuvanted Administration Date</td><td>out</td><td>0</td><td>1</td><td>Any</td></tr><tr><td>Patient has Completed the Hep B Adult Series</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Get Recommendation Detail</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>Second Valid Hep B Adjuvanted Adult Dose</td><td>out</td><td>0</td><td>1</td><td>Immunization</td></tr></table><h2>Data Requirements</h2><table class=\"grid\"><tr><td colspan=\"2\"><b>Type</b>: <a href=\"http://hl7.org/fhir/R4/immunization.html\">Immunization</a> (<a href=\"http://hl7.org/fhir/R4/immunization.html\">Immunization</a>)</td></tr><tr style=\"background-color: #efefef\"><td>Filter</td><td>Value</td></tr><tr><td>vaccineCode</td><td>In ValueSet <a href=\"http://example.org/fhir/uv/cpg/ValueSet/all-hepb-vaccines\">http://example.org/fhir/uv/cpg/ValueSet/all-hepb-vaccines</a></td></tr></table><table class=\"grid\"><tr><td colspan=\"2\"><b>Type</b>: <a href=\"http://hl7.org/fhir/R4/immunization.html\">Immunization</a> (<a href=\"http://hl7.org/fhir/R4/immunization.html\">Immunization</a>)</td></tr><tr style=\"background-color: #efefef\"><td>Filter</td><td>Value</td></tr><tr><td>vaccineCode</td><td>One of these codes: <a href=\"https://terminology.hl7.org/1.0.0//CodeSystem-CVX.html\">http://hl7.org/fhir/sid/cvx</a> 189: 189</td></tr></table><h2>Contents</h2><p><code>text/cql</code></p><pre><code class=\"language-sql\">/*\r\n  This example describes the logic of the Hepatitis B (Hep B) immunization schedule for adults who are 18 years or older and have not yet been vaccinated for Hep B.\r\n  It is provided for demonstration purposes and not intended to be a complete representation of all of the Hep B immunization schedule logic.\r\n  See accompanying documentation for additional details and references.\r\n*/\r\nlibrary HepBAdultForecasting version '0.1.0'\r\n\r\nusing FHIR version '4.0.1'\r\n\r\ninclude FHIRHelpers version '4.0.1' called FHIRHelpers\r\n\r\ncodesystem CVX: 'http://hl7.org/fhir/sid/cvx'\r\ncodesystem &quot;Immunization Evaluation Dose Status codes&quot;: 'http://terminology.hl7.org/CodeSystem/immunization-evaluation-dose-status'\r\n\r\n// Valuesets\r\nvalueset &quot;All Hep B Vaccines&quot;: 'http://example.org/fhir/uv/cpg/ValueSet/all-hepb-vaccines'\r\n\r\n\r\n// Hep B Vaccine Codes\r\ncode &quot;DTaP-IPV-Hib-Hep B, historical&quot;: '132' from &quot;CVX&quot;\r\ncode &quot;DTaP, IPV, Hib, Hep B&quot;: '146' from &quot;CVX&quot;\r\ncode &quot;DTaP-Hep B-IPV&quot;: '110' from &quot;CVX&quot;\r\ncode &quot;DTP-Hib-Hep B&quot;: '102' from &quot;CVX&quot;\r\ncode &quot;Hep A-Hep B&quot;: '104' from &quot;CVX&quot;\r\ncode &quot;Hep B, adolescent/high risk infant&quot;: '42' from &quot;CVX&quot;\r\ncode &quot;Hep B, adult&quot;: '43' from &quot;CVX&quot;\r\ncode &quot;Hep B, dialysis&quot;: '44' from &quot;CVX&quot;\r\ncode &quot;Hep B, unspecified formulation&quot;: '45' from &quot;CVX&quot;\r\ncode &quot;Hep B Vaccine Code, Adjuvanted&quot;: '189' from &quot;CVX&quot;\r\ncode &quot;Hib-Hep B&quot;: '51' from &quot;CVX&quot;\r\n\r\n// Evaluation Status Code\r\ncode &quot;Valid Evaluation Status&quot;: 'valid' from &quot;Immunization Evaluation Dose Status codes&quot;\r\n\r\n// Concept\r\nconcept &quot;Hep B Vaccine, Adjuvanted&quot;: { &quot;Hep B Vaccine Code, Adjuvanted&quot; }\r\n\r\n\r\ncontext Patient\r\n\r\ndefine &quot;Patient Hep B Immunization History should be Evaluated in Adult Series&quot;:\r\n  &quot;Patient is 18 Years Minus 4 Days or Older&quot; and &quot;No Hep B Shots were Administered before 18 Years minus 4 Days of Age&quot;\r\n  or\r\n  &quot;There Exists a Valid First Hep B Adjuvanted Dose&quot;\r\n  or\r\n  &quot;There Exists a Valid Second Hep B Adjuvanted Dose&quot;\r\n\r\ndefine &quot;Patient is 18 Years Minus 4 Days or Older&quot;:\r\n  AgeInDays() &gt;= &quot;Age in Days when Patient is 18 Years minus 4 Days&quot;\r\n\r\ndefine &quot;No Hep B Shots were Administered before 18 Years minus 4 Days of Age&quot;:\r\n  not exists([Immunization: vaccineCode in &quot;All Hep B Vaccines&quot;] NI\r\n    where NI.occurrence is date and AgeInDaysAt(NI.occurrence.value) &lt; &quot;Age in Days when Patient is 18 Years minus 4 Days&quot;\r\n  )\r\n\r\n////////////////////////////////////////////////////////\r\n// Recommendation/Forecast\r\n////////////////////////////////////////////////////////\r\ndefine &quot;Get Recommendation Overview&quot;:\r\n  'Immunization Forecast of Hepatitis B, Adjuvanted Vaccine for Adults 18 Years of Age or Older'\r\n\r\ndefine &quot;Get Recommendation Detail&quot;:\r\n  case\r\n    when &quot;A Forecast for Hep B Adult Dose 1 Should be Made&quot;\r\n      then 'Dose 1 of the Hepatitus B, adjuvanted vaccine (CVX 189) is recommended to be administered on ' + ToString(PatientBirthDate + 18 years) + '.'\r\n    when &quot;A Forecast for Hep B Adult Dose 2 Should be Made&quot;\r\n      then 'Dose 2 of the Hepatitis B, adjuvanted vaccine (CVX 189) is recommended to be administered on ' + ToString(&quot;Most Recent Hep B Adjuvanted Administration Date&quot; + 28 days) + '.'\r\n    when &quot;Patient has Completed the Hep B Adult Series&quot;\r\n      then 'The patient has already received 2 doses of the Hepatitis B, adjuvanted vaccine (CVX 189), and has completed the series. No additional doses are recommeneded at this time.'\r\n    else\r\n      'A forecast could not be determined at this time.'\r\n  end\r\n\r\ndefine &quot;A Forecast for Hep B Adult Dose 1 Should be Made&quot;:\r\n  if\r\n    &quot;Patient Hep B Immunization History should be Evaluated in Adult Series&quot; and &quot;There Exists a Valid First Hep B Adjuvanted Dose&quot; = false\r\n  then\r\n    true\r\n  else\r\n    false\r\n\r\ndefine &quot;A Forecast for Hep B Adult Dose 2 Should be Made&quot;:\r\n  &quot;There Exists a Valid First Hep B Adjuvanted Dose&quot; = true and &quot;There Exists a Valid Second Hep B Adjuvanted Dose&quot; = false\r\n\r\ndefine &quot;Patient has Completed the Hep B Adult Series&quot;:\r\n  &quot;There Exists a Valid First Hep B Adjuvanted Dose&quot; = true and &quot;There Exists a Valid Second Hep B Adjuvanted Dose&quot; = true\r\n\r\n\r\n////////////////////////////////////////////////////////\r\n// Evaluation\r\n////////////////////////////////////////////////////////\r\ndefine &quot;Hep B Vaccine, Adjuvanted Immunization&quot;:\r\n  [Immunization: vaccineCode in &quot;Hep B Vaccine, Adjuvanted&quot;]\r\n\r\ndefine &quot;Most Recent Hep B Adjuvanted Administration Date&quot;:\r\n  First(\r\n    &quot;Hep B Vaccine, Adjuvanted Immunization&quot; I\r\n      without &quot;Hep B Vaccine, Adjuvanted Immunization&quot; NI\r\n        such that I.occurrence.value is DateTime and NI.occurrence.value is DateTime and NI.occurrence.value after I.occurrence.value\r\n      where I.occurrence.value is DateTime\r\n      return I.occurrence.value\r\n  )\r\n\r\ndefine &quot;There Exists a Valid First Hep B Adjuvanted Dose&quot;:\r\n  if &quot;First Valid Hep B Adjuvanted Adult Dose&quot; != null\r\n    then\r\n      true\r\n  else\r\n    false\r\n\r\ndefine &quot;First Valid Hep B Adjuvanted Adult Dose&quot;:\r\n  First(\r\n    &quot;Hep B Vaccine, Adjuvanted Immunization&quot; I\r\n      without &quot;Hep B Vaccine, Adjuvanted Immunization&quot; NI\r\n        such that I.occurrence.value is DateTime and AgeInDaysAt(I.occurrence.value) &gt;= &quot;Age in Days when Patient is 18 Years minus 4 Days&quot;\r\n          and NI.occurrence.value is DateTime and NI.occurrence.value before I.occurrence.value\r\n      where I.occurrence.value is DateTime\r\n  )\r\n\r\ndefine &quot;There Exists a Valid Second Hep B Adjuvanted Dose&quot;:\r\n  if &quot;There Exists a Valid First Hep B Adjuvanted Dose&quot;\r\n    then\r\n      true\r\n  else\r\n    false\r\n\r\ndefine &quot;Second Valid Hep B Adjuvanted Adult Dose&quot;:\r\n  if &quot;There Exists a Valid First Hep B Adjuvanted Dose&quot;\r\n    then\r\n      First(\r\n         &quot;Hep B Vaccine, Adjuvanted Immunization&quot; I\r\n          let firstDoseDate: &quot;First Valid Hep B Adjuvanted Adult Dose&quot;.occurrence\r\n          without &quot;Hep B Vaccine, Adjuvanted Immunization&quot; NI\r\n            // where the date is at least 24 days after the most recent shot of Hep B Adjuvant\r\n            such that NI.occurrence.value is DateTime and NI.occurrence.value after firstDoseDate.value and NI.occurrence.value before I.occurrence.value\r\n          where I.occurrence.value is DateTime and I.occurrence.value 24 days or more after firstDoseDate.value\r\n        )\r\n    else\r\n      null\r\n\r\ndefine PatientBirthDate:\r\n  Patient.birthDate.value\r\n\r\ndefine &quot;Age in Days when Patient is 18 Years minus 4 Days&quot;:\r\n  CalculateAgeInDaysAt(PatientBirthDate, PatientBirthDate + 18 years - 4 days)\r\n</code></pre><p><code>Content not shown - (</code><code>application/elm+xml</code>, size = 31Kb)</p><p><code>Content not shown - (</code><code>application/elm+json</code>, size = 55Kb)</p></div>"},"url":"http://example.org/fhir/uv/cpg/Library/HepBAdultForecasting","identifier":[{"use":"official","value":"HepBAdultForecasting"}],"version":"1.0.0","name":"HepBAdultForecasting","title":"Logic for Immunization Forecasting of Hepatitis B Vaccine for Adults >= 18 Years of Age","status":"active","experimental":true,"type":{"coding":[{"system":"http://terminology.hl7.org/CodeSystem/library-type","code":"logic-library","display":"Logic Library"}]},"date":"2019-07-26T14:15:00-04:00","publisher":"HL7 FHIR Clinical Guidelines Example Artifact","contact":[{"telecom":[{"system":"url","value":"http://hl7.org/Special/committees/dss"}]}],"description":"If an adult patient has not been immunized for Hep B and is indicated for a Hep B vaccine, providers should administer according to this forecast.","useContext":[{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"384810002","display":"Immunization/vaccination management (procedure)"}]}}],"jurisdiction":[{"coding":[{"system":"http://unstats.un.org/unsd/methods/m49/m49.htm","code":"001","display":"World"}]}],"purpose":"Example artifact implementation of CDC ACIP Hep B vaccination guidelines for adults, 18 years and older, who have not yet been immunized.","topic":[{"text":"Hepatitus B Adult Immunization Forecasting"}],"author":[{"name":"Daryl Chertcoff"},{"name":"Bryn Rhodes"}],"relatedArtifact":[{"type":"documentation","display":"Immunization Calculation Engine - Hep B Vaccine Group - Hep B 2-dose Adult Series","url":"https://cdsframework.atlassian.net/wiki/spaces/ICE/pages/14352491/Hep+B+Vaccine+Group#HepBVaccineGroup-ImmunizationSeries:HepB2-doseAdultSeries"},{"type":"documentation","display":"CDC MMWR Vol.67 / No.1 : Prevention of Hepatitis B Virus Infection in the United States: Recommendations of the Advisory Committee on Immunization Practices","url":"http://www.cdc.gov/mmwr/volumes/67/rr/pdfs/rr6701-H.PDF"},{"type":"documentation","display":"April 2018 Recommendations for the use of adjuvanted hepatitis B vaccine (Heplisav-B, Dynavax)","url":"https://www.cdc.gov/mmwr/volumes/67/wr/pdfs/mm6715a5-H.pdf"},{"type":"depends-on","resource":"http://hl7.org/fhir/Library/FHIR-ModelInfo|4.0.1"},{"type":"depends-on","resource":"http://hl7.org/fhir/Library/FHIRHelpers|4.0.1"},{"type":"depends-on","resource":"http://hl7.org/fhir/sid/cvx"},{"type":"depends-on","resource":"http://terminology.hl7.org/CodeSystem/immunization-evaluation-dose-status"},{"type":"depends-on","resource":"http://example.org/fhir/uv/cpg/ValueSet/all-hepb-vaccines"}],"parameter":[{"name":"Patient","use":"out","min":0,"max":"1","type":"Patient"},{"name":"PatientBirthDate","use":"out","min":0,"max":"1","type":"date"},{"name":"Age in Days when Patient is 18 Years minus 4 Days","use":"out","min":0,"max":"1","type":"integer"},{"name":"Patient is 18 Years Minus 4 Days or Older","use":"out","min":0,"max":"1","type":"boolean"},{"name":"No Hep B Shots were Administered before 18 Years minus 4 Days of Age","use":"out","min":0,"max":"1","type":"boolean"},{"name":"Hep B Vaccine, Adjuvanted Immunization","use":"out","min":0,"max":"*","type":"Immunization"},{"name":"First Valid Hep B Adjuvanted Adult Dose","use":"out","min":0,"max":"1","type":"Immunization"},{"name":"There Exists a Valid First Hep B Adjuvanted Dose","use":"out","min":0,"max":"1","type":"boolean"},{"name":"There Exists a Valid Second Hep B Adjuvanted Dose","use":"out","min":0,"max":"1","type":"boolean"},{"name":"Patient Hep B Immunization History should be Evaluated in Adult Series","use":"out","min":0,"max":"1","type":"boolean"},{"name":"Get Recommendation Overview","use":"out","min":0,"max":"1","type":"string"},{"name":"A Forecast for Hep B Adult Dose 1 Should be Made","use":"out","min":0,"max":"1","type":"boolean"},{"name":"A Forecast for Hep B Adult Dose 2 Should be Made","use":"out","min":0,"max":"1","type":"boolean"},{"name":"Most Recent Hep B Adjuvanted Administration Date","use":"out","min":0,"max":"1","type":"Any"},{"name":"Patient has Completed the Hep B Adult Series","use":"out","min":0,"max":"1","type":"boolean"},{"name":"Get Recommendation Detail","use":"out","min":0,"max":"1","type":"string"},{"name":"Second Valid Hep B Adjuvanted Adult Dose","use":"out","min":0,"max":"1","type":"Immunization"}],"dataRequirement":[{"type":"Immunization","profile":["http://hl7.org/fhir/StructureDefinition/Immunization"],"codeFilter":[{"path":"vaccineCode","valueSet":"http://example.org/fhir/uv/cpg/ValueSet/all-hepb-vaccines"}]},{"type":"Immunization","profile":["http://hl7.org/fhir/StructureDefinition/Immunization"],"codeFilter":[{"path":"vaccineCode","code":[{"system":"http://hl7.org/fhir/sid/cvx","code":"189"}]}]}],"content":[{"contentType":"text/cql","data":""},{"contentType":"application/elm+xml","data":""},{"contentType":"application/elm+json","data":""}]}
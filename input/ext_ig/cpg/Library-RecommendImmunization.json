{"resourceType":"Library","id":"RecommendImmunization","meta":{"profile":["http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-computablelibrary","http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-executablelibrary"]},"extension":[{"url":"http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability","valueCode":"shareable"},{"url":"http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability","valueCode":"computable"},{"url":"http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability","valueCode":"publishable"},{"url":"http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeRepresentationLevel","valueCode":"structured"}],"url":"http://hl7.org/fhir/uv/cpg/Library/RecommendImmunization","version":"1.0.0","name":"RecommendImmunization","title":"Recommend Immunization","status":"draft","experimental":true,"type":{"coding":[{"system":"http://terminology.hl7.org/CodeSystem/library-type","code":"logic-library"}]},"date":"2020-11-29T15:54:22-07:00","publisher":"HL7 International - Clinical Decision Support WG","contact":[{"telecom":[{"system":"url","value":"http://hl7.org/Special/committees/dss"}]}],"description":"Logic for an example recommendation to recommend an immunization","jurisdiction":[{"coding":[{"system":"http://unstats.un.org/unsd/methods/m49/m49.htm","code":"001","display":"World"}]}],"relatedArtifact":[{"type":"depends-on","resource":"http://hl7.org/fhir/Library/FHIR-ModelInfo|4.0.1"},{"type":"depends-on","resource":"http://hl7.org/fhir/Library/FHIRHelpers|4.0.1"},{"type":"depends-on","resource":"http://terminology.hl7.org/CodeSystem/immunization-recommendation-status"}],"parameter":[{"name":"Patient","use":"out","min":0,"max":"1","type":"Patient"},{"name":"Inclusion Criteria","use":"out","min":0,"max":"1","type":"boolean"},{"name":"Active or Completed Immunization","use":"out","min":0,"max":"*","type":"Immunization"},{"name":"Immunization Not Done","use":"out","min":0,"max":"*","type":"Immunization"},{"name":"Immunization Proposal","use":"out","min":0,"max":"*","type":"ImmunizationRecommendation"},{"name":"Immunization Not Proposed","use":"out","min":0,"max":"*","type":"ImmunizationRecommendation"},{"name":"Is Recommendation Applicable","use":"out","min":0,"max":"1","type":"boolean"}],"dataRequirement":[{"type":"Immunization","profile":["http://hl7.org/fhir/StructureDefinition/Immunization"]},{"type":"Immunization","profile":["http://hl7.org/fhir/StructureDefinition/Immunization"]},{"type":"ImmunizationRecommendation","profile":["http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation"]},{"type":"ImmunizationRecommendation","profile":["http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation"]}],"content":[{"contentType":"text/cql","data":"bGlicmFyeSBSZWNvbW1lbmRJbW11bml6YXRpb24NCg0KdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScNCg0KaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICc0LjAuMScNCg0KY29kZXN5c3RlbSAiSW1tdW5pemF0aW9uIFJlY29tbWVuZGF0aW9uIFN0YXR1cyBDb2RlcyI6ICdodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2ltbXVuaXphdGlvbi1yZWNvbW1lbmRhdGlvbi1zdGF0dXMnDQoNCmNvZGUgIkltbXVuaXphdGlvbiBEdWUiOiAnZHVlJyBmcm9tICJJbW11bml6YXRpb24gUmVjb21tZW5kYXRpb24gU3RhdHVzIENvZGVzIg0KY29kZSAiSW1tdW5pemF0aW9uIE92ZXJkdWUiOiAnb3ZlcmR1ZScgZnJvbSAiSW1tdW5pemF0aW9uIFJlY29tbWVuZGF0aW9uIFN0YXR1cyBDb2RlcyINCmNvZGUgIkltbXVuaXphdGlvbiBJbW11bmUiOiAnaW1tdW5lJyBmcm9tICJJbW11bml6YXRpb24gUmVjb21tZW5kYXRpb24gU3RhdHVzIENvZGVzIg0KY29kZSAiSW1tdW5pemF0aW9uIENvbnRyYWluZGljYXRlZCI6ICdjb250cmFpbmRpY2F0ZWQnIGZyb20gIkltbXVuaXphdGlvbiBSZWNvbW1lbmRhdGlvbiBTdGF0dXMgQ29kZXMiDQpjb2RlICJJbW11bml6YXRpb24gQ29tcGxldGUiOiAnY29tcGxldGUnIGZyb20gIkltbXVuaXphdGlvbiBSZWNvbW1lbmRhdGlvbiBTdGF0dXMgQ29kZXMiDQoNCmNvbnRleHQgUGF0aWVudA0KDQovKiBSZWNvbW1lbmRhdGlvbiB0byBpbW11bml6ZSB0aGUgcGF0aWVudCAqLw0KDQovKg0KTk9URTogVGhpcyByZWNvbW1lbmRhdGlvbiBpcyBkcmFtYXRpY2FsbHkgc2ltcGxpZmllZCB0byBpbGx1c3RyYXRlIHRoZSBnZW5lcmFsDQpwYXR0ZXJuIGZvciBhIHBvc2l0aXZlIHJlY29tbWVuZGF0aW9uLCB3aXRoIHRoZSBhYmlsaXR5IGZvciB1c2VycyB0byByZWplY3QNCnRoZSByZWNvbW1lbmRhdGlvbiwgYW5kIGZsZXhpYmlsaXR5IGluIGhvdyB0aGUgcmVjb21tZW5kYXRpb24gaXMgYWNoaWV2ZWQuDQoNClNwZWNpZmljYWxseToNCiogVGhlcmUgaXMgbm8gdGVybWlub2xvZ3ksIGFueSBpbW11bml6YXRpb24gcmVxdWVzdC9ldmVudCBvbiBhbnkgdG9waWMgd2lsbCBkbw0KKiBUaGVyZSBpcyBubyB0aW1pbmcsIGFueSBpbW11bml6YXRpb24gcmVxdWVzdC9ldmVudCB3aWxsIGRvIGF0IGFueSB0aW1lDQoqIFRoZXJlIGlzIG5vIHJlZmVyZW5jZSB0byBwYXJ0aWNpcGFudHMgb3RoZXIgdGhhbiB0aGUgcGF0aWVudA0KKiBUaGVyZSBpcyBubyByZWxhdGlvbnNoaXAgdG8gYSBzZXR0aW5nDQoqIFRoZXJlIGlzIG5vIHJlbGF0aW9uc2hpcCB0byBhbiBlbmNvdW50ZXIgb3IgZXBpc29kZQ0KKiBUaGVyZSBpcyBubyByZWxhdGlvbnNoaXAgdG8gYSBjYXJlIHBsYW4NCg0KVGhlc2Ugc2ltcGxpZmljYXRpb25zIGFsbG93IHRoZSBleGFtcGxlIHRvIGZvY3VzIGV4Y2x1c2l2ZWx5IG9uIHRoZSBwYXR0ZXJuIGZvcg0KcmVjb21tZW5kaW5nIGFuZCBmb3IgYWNjZXB0aW5nL3JlamVjdGluZyB0aGUgcHJvcG9zYWwsIGFzIHdlbGwgYXMgZG9jdW1lbnRpbmcNCnRoZSBjb21wbGV0aW9uLCBvciBleHBsaWNpdCBub24tcGVyZm9ybWFuY2Ugb2YgdGhlIGNvbW11bmljYXRpb24uDQoqLw0KDQovKg0KUG9zaXRpdmUgcmVjb21tZW5kYXRpb246DQoNCklmIHRoZSBhY3Rpdml0eSBoYXMgbm90IGJlZW4gcGVyZm9ybWVkDQogIElmIHRoZSBhY3Rpdml0eSBoYXMgbm90IGJlZW4gcGxhbm5lZCBvciBwcm9wb3NlZA0KICAgIFByb3Bvc2UgdGhlIGFjdGl2aXR5DQoNCkdpdmVuIGEgcHJvcG9zYWwsIHRoZSB1c2VyIGNhbjoNCiAgQWNjZXB0IHRoZSBwcm9wb3NhbA0KICBJZ25vcmUgdGhlIHByb3Bvc2FsDQogIFJlamVjdCB0aGUgcHJvcG9zYWwgd2l0aG91dCByZWFzb24NCiAgUmVqZWN0IHRoZSBwcm9wb3NhbCB3aXRoIHJlYXNvbg0KDQpTY2VuYXJpbyAxOiBObyBldmVudCwgbm8gcGxhbiBvciBwcm9wb3NhbCwgZGVjaXNpb24gc3VwcG9ydCBzaG91bGQgcHJvcG9zZQ0KU2NlbmFyaW8gMjogTm8gZXZlbnQsIGluY29tcGxldGUgcHJvcG9zYWwsIGRlY2lzaW9uIHN1cHBvcnQgc2hvdWxkIG5vdCBwcm9wb3NlDQpTY2VuYXJpbyAzOiBObyBldmVudCwgcmVqZWN0ZWQgcHJvcG9zYWwsIGRlY2lzaW9uIHN1cHBvcnQgc2hvdWxkIG5vdCBwcm9wb3NlDQpTY2VuYXJpbyA0OiBFdmVudCwgbm8gcHJvcG9zYWwsIGRlY2lzaW9uIHN1cHBvcnQgc2hvdWxkIG5vdCBwcm9wb3NlDQpTY2VuYXJpbyA1OiBFdmVudCwgY29tcGxldGVkIHByb3Bvc2FsLCBkZWNpc2lvbiBzdXBwb3J0IHNob3VsZCBub3QgcHJvcG9zZQ0KU2NlbmFyaW8gNjogRXZlbnQgbm90IGRvbmUsIG5vIHByb3Bvc2FsLCBkZWNpc2lvbiBzdXBwb3J0IHNob3VsZCBub3QgcHJvcG9zZQ0KU2NlbmFyaW8gNzogRXZlbnQgbm90IGRvbmUsIHByb3Bvc2FsLCBkZWNpc2lvbiBzdXBwb3J0IHNob3VsZCBub3QgcHJvcG9zZQ0KDQoqLw0KDQpkZWZpbmUgIkluY2x1c2lvbiBDcml0ZXJpYSI6DQogIFBhdGllbnQuYWN0aXZlDQoNCmRlZmluZSAiQWN0aXZlIG9yIENvbXBsZXRlZCBJbW11bml6YXRpb24iOg0KICBbSW1tdW5pemF0aW9uXSBDDQogICAgd2hlcmUgQy5zdGF0dXMgaW4geyAnY29tcGxldGVkJyB9DQoNCmRlZmluZSAiSW1tdW5pemF0aW9uIE5vdCBEb25lIjoNCiAgW0ltbXVuaXphdGlvbl0gQw0KICAgIHdoZXJlIEMuc3RhdHVzIGluIHsgJ25vdC1kb25lJyB9DQoNCmRlZmluZSAiSW1tdW5pemF0aW9uIFByb3Bvc2FsIjoNCiAgW0ltbXVuaXphdGlvblJlY29tbWVuZGF0aW9uXSBSDQogICAgbGV0IFJlY29tbWVuZGF0aW9uOiBGaXJzdChSLnJlY29tbWVuZGF0aW9uKSAvLyBOT1RFOiBTaG91bGQgc2VsZWN0IHNwZWNpZmljIHJlY29tbWVuZGF0aW9uIGhlcmUgYmFzZWQgb24gdmFjY2luZUNvZGUNCiAgICB3aGVyZSBSZWNvbW1lbmRhdGlvbi5mb3JlY2FzdFN0YXR1cyB+ICJJbW11bml6YXRpb24gRHVlIg0KICAgICAgb3IgUmVjb21tZW5kYXRpb24uZm9yZWNhc3RTdGF0dXMgfiAiSW1tdW5pemF0aW9uIE92ZXJkdWUiDQoNCmRlZmluZSAiSW1tdW5pemF0aW9uIE5vdCBQcm9wb3NlZCI6DQogIFtJbW11bml6YXRpb25SZWNvbW1lbmRhdGlvbl0gUg0KICAgIGxldCBSZWNvbW1lbmRhdGlvbjogRmlyc3QoUi5yZWNvbW1lbmRhdGlvbikgLy8gTk9URTogU2hvdWxkIHNlbGVjdCBzcGVjaWZpYyByZWNvbW1lbmRhdGlvbiBoZXJlIGJhc2VkIG9uIHZhY2NpbmVDb2RlDQogICAgd2hlcmUgUmVjb21tZW5kYXRpb24uZm9yZWNhc3RTdGF0dXMgfiAiSW1tdW5pemF0aW9uIEltbXVuZSINCiAgICAgIG9yIFJlY29tbWVuZGF0aW9uLmZvcmVjYXN0U3RhdHVzIH4gIkltbXVuaXphdGlvbiBDb250cmFpbmRpY2F0ZWQiDQogICAgICBvciBSZWNvbW1lbmRhdGlvbi5mb3JlY2FzdFN0YXR1cyB+ICJJbW11bml6YXRpb24gQ29tcGxldGUiDQoNCmRlZmluZSAiSXMgUmVjb21tZW5kYXRpb24gQXBwbGljYWJsZSI6DQogICJJbmNsdXNpb24gQ3JpdGVyaWEiDQogICAgYW5kIG5vdCBleGlzdHMgKA0KICAgICAgIkFjdGl2ZSBvciBDb21wbGV0ZWQgSW1tdW5pemF0aW9uIg0KICAgICAgICB1bmlvbiAiSW1tdW5pemF0aW9uIE5vdCBEb25lIg0KICAgICkNCiAgICBhbmQgbm90IGV4aXN0cyAoDQogICAgICAiSW1tdW5pemF0aW9uIFByb3Bvc2FsIg0KICAgICAgICB1bmlvbiAiSW1tdW5pemF0aW9uIE5vdCBQcm9wb3NlZCINCiAgICApDQo="},{"contentType":"application/elm+xml","data":""},{"contentType":"application/elm+json","data":""}]}
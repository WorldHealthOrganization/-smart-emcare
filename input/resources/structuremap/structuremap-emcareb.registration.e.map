map 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureMap/emcareb.registration.e' = 'emcareb.registration.e'
uses 'http://hl7.org/fhir/uv/sdc/StructureDefinition/sdc-questionnaireresponse' alias 'questionnaireResponse' as source
uses 'http://hl7.org/fhir/StructureDefinition/Bundle' alias 'Bundle' as target
uses 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/encounter' alias 'Encounter' as target
uses 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/relatedperson' alias 'RelatedPerson' as target
uses 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/observation' alias 'Observation' as target
uses 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareencounter' alias 'EmCare Encounter' as produced
uses 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcarerelatedperson' alias 'EmCare RelatedPerson' as produced
uses 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareobservation' alias 'EmCare Observation' as produced
group bundletrans(source src : questionnaireResponse,target bundle : Bundle){
    src -> bundle.id = uuid() 'id';
    src -> bundle.type = 'batch' 'type';
    src -> bundle.entry as entry then {
        src -> entry.fullUrl as fullurl then getFullUrlemcareencounter(src, fullurl) 'fuemcareencounter';
        src -> entry.request as request, request.method = "PUT", request.url as url then getUrlemcareencounter(src, url) 'uemcareencounter';
        src -> entry.resource = create("Encounter") as tgt then emcareencounter(src, tgt) 'cemcareencounter';
    } 'put-emcareencounter';
    src -> bundle.entry as entry then {
        src -> entry.fullUrl as fullurl then getFullUrlemcarerelatedperson(src, fullurl) 'fuemcarerelatedperson';
        src -> entry.request as request, request.method = "PUT", request.url as url then getUrlemcarerelatedperson(src, url) 'uemcarerelatedperson';
        src -> entry.resource = create("RelatedPerson") as tgt then emcarerelatedperson(src, tgt) 'cemcarerelatedperson';
    } 'put-emcarerelatedperson';
        src -> bundle.entry as entry,
            entry.request as request,
            request.method = "POST",
            entry.resource = create('Observation') as tgt
         then {
        src.item first as item  where linkId =  'EmCare.B3.DE05' -> item.answer as a then SetObservationemcareb3de05(src, a, tgt)  'obs-EmCare.B3.DE05';
    } 'post-EmCare.B3.DE05';
}

group emcareencounter(source src : questionnaireResponse,target tgt : Encounter){
    src.item as item where linkId  = 'EmCare.A.DE07'  -> tgt then { item.answer as a -> tgt.period as period,  period.start = a 'EmCare.A.DE07-1';   } 'emcareade07';
    src.item as item where linkId  = 'EmCare.B2.DE01'  -> tgt then { item.answer as a -> tgt.type = a 'EmCare.B2.DE01-1';   } 'emcareb2de01';
    src.item as item where linkId  = 'EmCare.B3.DE01'  -> tgt then { item.answer as a -> tgt.reasonCode = a 'EmCare.B3.DE01-1';   } 'emcareb3de01';
    src.item as item where linkId  = 'EmCare.B3.DE06'  -> tgt then { item.answer as a -> tgt.type = a 'EmCare.B3.DE06-1';   } 'emcareb3de06';
    src.item as item where linkId  = 'EmCare.B3.DE09'  -> tgt then { item.answer first as a, a.value as val -> tgt.extension as ext , ext.url ='https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/refered',  ext.value = val 'EmCare.B3.DE09-1';   } 'emcareb3de09';
}

group getIdemcareencounter(source src,target tgt){
    src.item first as item where linkId  =  'EmCare Encounterid' then {
        item.answer first as a, a.value as val ->  ressource = val 'idemcareencounter';
    } 'iemcareencounter';
}

group getFullUrlemcareencounter(source src,target tgt){
    src.item first as item where linkId  =  'EmCare Encounterid' then {
        item.answer first as a, a.value as val ->  ressource = append('urn:uuid:', val) 'fuemcareencounter';
    } 'fuemcareencounter';
}

group getUrlemcareencounter(source src,target tgt){
    src.item first as item where linkId  =  'EmCare Encounterid' then {
        item.answer first as a, a.value as val ->  ressource =  append('Encounter/', val) 'uemcareencounter';
    } 'uemcareencounter';
}

group emcarerelatedperson(source src : questionnaireResponse,target tgt : RelatedPerson){
    src.item first as item  where linkId =  'EmCare.A.DE40'  or linkId =  'EXXXXXXX' or linkId =  'EmCare.A.DE40' -> tgt as target,  target.name as name then SetOfficalGivenNameemcareade40(src, name) 'emcareade40';
    src.item as item where linkId  = 'EmCare.A.DE43'  -> tgt then { item.answer as a -> tgt then {a where a.valueCode= 'EmCare.A.DE30' -> tgt.relationship =  translate(a, 'relationship-to-client', 'http://terminology.hl7.org/CodeSystem/v2-0131') 'person-accomp';
    a where a.valueCode != 'EmCare.A.DE30' -> tgt.relationship =  translate(a, 'relationship-to-client', 'http://terminology.hl7.org/CodeSystem/v3-RoleCode') 'person-accomp-std';} 'EmCare.A.DE43-1';   } 'emcareade43';
}

group SetOfficalGivenNameemcareade40(source src,target tgt){
    src -> tgt.use = 'official' then {
        src.item as item where linkId  =  'EmCare.A.DE40'  -> tgt then {item.answer as a -> tgt.given = a 'f';} 'femcareade40';
        src.item as item where linkId  =  'EXXXXXXX' -> tgt then {item.answer as a -> tgt.given = a 'f';} 'memcareade40';
        src.item as item where linkId  =  'EmCare.A.DE40' -> tgt then {item.answer as a -> tgt.family = a 'f';} 'lemcareade40';
    } 'sgnemcareade40';
}

group getIdemcarerelatedperson(source src,target tgt){
    src.item first as item where linkId  =  'EmCare RelatedPersonid' then {
        item.answer first as a, a.value as val ->  ressource = val 'idemcarerelatedperson';
    } 'iemcarerelatedperson';
}

group getFullUrlemcarerelatedperson(source src,target tgt){
    src.item first as item where linkId  =  'EmCare RelatedPersonid' then {
        item.answer first as a, a.value as val ->  ressource = append('urn:uuid:', val) 'fuemcarerelatedperson';
    } 'fuemcarerelatedperson';
}

group getUrlemcarerelatedperson(source src,target tgt){
    src.item first as item where linkId  =  'EmCare RelatedPersonid' then {
        item.answer first as a, a.value as val ->  ressource =  append('RelatedPerson/', val) 'uemcarerelatedperson';
    } 'uemcarerelatedperson';
}

group SetObservationemcareb3de05(source src,source a,target tgt){
        src -> tgt.identifier = create('Identifier') as CodeID,
            CodeID.system = 'http://hl7.org/fhir/namingsystem-identifier-type',
            CodeID.use =  'official',
            CodeID.value = 'uuid',
            CodeID.id = uuid()
         'id-emcareb3de05';
        src -> tgt.basedOn = src.basedOn,
            tgt.encounter = src.encounter,
            tgt.subject = src.subject,
            tgt.meta = create('Meta') as newMeta, newMeta.profile = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareb3de05',
            tgt.code = create('CodeableConcept') as concept,
                concept.system = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes',
                concept.code = 'EmCare.B3.DE05'
         'code-emcareb3de05';
    src.item as item where linkId  = 'timestamp', item.answer as a -> tgt.issued = a 'timestamp-emcareb3de05';
    a  where a.value = 'yes' -> tgt.status = 'final'  'final-emcareb3de05';
     a  where a.value = 'no' -> tgt.status = 'cancelled'  'notfound-emcareb3de05';
}


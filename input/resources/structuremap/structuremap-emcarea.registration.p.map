map 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureMap/emcarea.registration.p' = 'emcarea.registration.p'
uses 'http://hl7.org/fhir/uv/sdc/StructureDefinition/sdc-questionnaireresponse' alias 'questionnaireResponse' as source
uses 'http://hl7.org/fhir/StructureDefinition/Bundle' alias 'Bundle' as target
uses 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/patient' alias 'Patient' as target
uses 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/encounter' alias 'Encounter' as target
uses 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/relatedperson' alias 'RelatedPerson' as target
uses 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/communicationrequest' alias 'CommunicationRequest' as target
uses 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcarepatient' alias 'EmCare Patient' as produced
uses 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcareencounter' alias 'EmCare Encounter' as produced
uses 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcarerelatedpersoncaregiver' alias 'EmCare RelatedPerson Caregiver' as produced
uses 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/emcarecommunicationrequest' alias 'EmCare CommunicationRequest' as produced
group bundletrans(source src : questionnaireResponse,target bundle : Bundle){
    src -> bundle.id = uuid() 'id';
    src -> bundle.type = 'batch' 'type';
    src -> bundle.entry as entry then {
        src -> entry.fullUrl as fullurl then getFullUrlemcarepatient(src, fullurl) 'fuemcarepatient';
        src -> entry.request as request, request.method = "PUT", request.url as url then getUrlemcarepatient(src, url) 'uemcarepatient';
        src -> entry.resource = create("Patient") as tgt then emcarepatient(src, tgt) 'cemcarepatient';
    } 'put-emcarepatient';
    src -> bundle.entry as entry then {
        src -> entry.fullUrl as fullurl then getFullUrlemcareencounter(src, fullurl) 'fuemcareencounter';
        src -> entry.request as request, request.method = "PUT", request.url as url then getUrlemcareencounter(src, url) 'uemcareencounter';
        src -> entry.resource = create("Encounter") as tgt then emcareencounter(src, tgt) 'cemcareencounter';
    } 'put-emcareencounter';
    src -> bundle.entry as entry then {
        src -> entry.fullUrl as fullurl then getFullUrlemcarerelatedpersoncaregiver(src, fullurl) 'fuemcarerelatedpersoncaregiver';
        src -> entry.request as request, request.method = "PUT", request.url as url then getUrlemcarerelatedpersoncaregiver(src, url) 'uemcarerelatedpersoncaregiver';
        src -> entry.resource = create("RelatedPerson") as tgt then emcarerelatedpersoncaregiver(src, tgt) 'cemcarerelatedpersoncaregiver';
    } 'put-emcarerelatedpersoncaregiver';
    src -> bundle.entry as entry then {
        src -> entry.fullUrl as fullurl then getFullUrlemcarecommunicationrequest(src, fullurl) 'fuemcarecommunicationrequest';
        src -> entry.request as request, request.method = "PUT", request.url as url then getUrlemcarecommunicationrequest(src, url) 'uemcarecommunicationrequest';
        src -> entry.resource = create("CommunicationRequest") as tgt then emcarecommunicationrequest(src, tgt) 'cemcarecommunicationrequest';
    } 'put-emcarecommunicationrequest';
}

group emcarepatient(source src : questionnaireResponse,target tgt : Patient){
    src.item as item where linkId  = 'EmCare.A.DE01'  -> tgt then { item.answer as a -> tgt.identifier = create('Identifier' ) as identifier then {
            a -> identifier.value = a, identifier.system = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir//CodeSystem/em-custom'  "id";
        } 'set-id';   } 'emcareade01';
    src.item as item where linkId  = 'EmCare.A.DE02'  -> tgt then { item.answer as a -> tgt.identifier = create('Identifier' ) as identifier then {
            a -> identifier.value = a, identifier.system = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir//CodeSystem/em-custom'  "idu";
        } 'set-id';   } 'emcareade02';
    src.item as item where linkId  = 'EmCare.A.DE03'  -> tgt then { item.answer as a -> tgt.identifier = create('Identifier' ) as identifier then {
            a -> identifier.value = 'noid', identifier.system = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir//CodeSystem/em-custom'  "noid";
        } 'set-id';   } 'emcareade03';
    src.item first as item  where linkId =  'EmCare.A.DE04'  or linkId =  'EmCare.A.DE05' or linkId =  'EmCare.A.DE06' -> tgt as target,  target.name as name then SetOfficalGivenNameemcareade04(src, name) 'emcareade04';
    src.item as item where linkId  = 'EmCare.A.DE08'  -> tgt then { item.answer first as a, a.value as val -> tgt.birthDate = val 'EmCare.A.DE08-1';   } 'emcareade08';
    src.item as item where linkId  = 'EmCare.A.DE12'  -> tgt then { item.answer as a -> tgt.extension as ext ,  ext.url ='https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/birthDateEstimator',  ext.valueCode = a 'EmCare.A.DE12-1';   } 'emcareade12';
    src.item as item where linkId  = 'EmCare.A.DE16'  -> tgt then { item.answer as a -> tgt.gender = translate(a, 'sex-of-the-client', 'http://hl7.org/fhir/administrative-gender') 'EmCare.A.DE16-1';   } 'emcareade16';
    src.item as item where linkId  = 'EmCare.A.DE20'  -> tgt then { item.answer first as a, a.value as val -> tgt.address as address, address.text = val 'EmCare.A.DE20-1';   } 'emcareade20';
    src.item as item where linkId  = 'EmCare.A.DE47'  -> tgt then { item.answer as a -> tgt.extension as ext ,  ext.url ='https://fhir.dk.swisstph-mis.ch/matchbox/fhir/StructureDefinition/caregiver', ext.valueReference= a 'EmCare.A.DE47-1';   } 'emcareade47';
    src.item as item where linkId  = 'EmCare.A.DE31'  -> tgt then { item.answer first as a, a.value as val -> tgt.extension as ext ,  ext.url ='https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Extension/motherVitalStatus', ext.value= val 'EmCare.A.DE31-1';   } 'emcareade31';
    src.item as item where linkId  = 'EmCare.A.DE32'  -> tgt then { item.answer first as a, a.value as val -> tgt.extension as ext ,  ext.url ='https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Extension/fatherVitalStatus', ext.value= val 'EmCare.A.DE32-1';   } 'emcareade32';
}

group SetOfficalGivenNameemcareade04(source src,target tgt){
    src -> tgt.use = 'official' then {
        src.item as item where linkId  =  'EmCare.A.DE04'  -> tgt then {item.answer as a -> tgt.given = a 'f';} 'femcareade04';
        src.item as item where linkId  =  'EmCare.A.DE05' -> tgt then {item.answer as a -> tgt.given = a 'f';} 'memcareade04';
        src.item as item where linkId  =  'EmCare.A.DE06' -> tgt then {item.answer as a -> tgt.family = a 'f';} 'lemcareade04';
    } 'sgnemcareade04';
}

group getIdemcarepatient(source src,target tgt){
    src.item first as item where linkId  =  'EmCare Patientid' then {
        item.answer first as a, a.value as val ->  ressource = val 'idemcarepatient';
    } 'iemcarepatient';
}

group getFullUrlemcarepatient(source src,target tgt){
    src.item first as item where linkId  =  'EmCare Patientid' then {
        item.answer first as a, a.value as val ->  ressource = append('urn:uuid:', val) 'fuemcarepatient';
    } 'fuemcarepatient';
}

group getUrlemcarepatient(source src,target tgt){
    src.item first as item where linkId  =  'EmCare Patientid' then {
        item.answer first as a, a.value as val ->  ressource =  append('Patient/', val) 'uemcarepatient';
    } 'uemcarepatient';
}

group emcareencounter(source src : questionnaireResponse,target tgt : Encounter){
    src.item as item where linkId  = 'EmCare.A.DE07'  -> tgt then { item.answer first as a, a.value as val -> tgt.period as period , period.start = val 'EmCare.A.DE07-1';   } 'emcareade07';
}

group getIdemcareencounter(source src,target tgt){
    src.item first as item where linkId  =  'EmCare Encounterid' then {
        item.answer first as a, a.value as val ->  ressource = val 'idemcareencounter';
    } 'iemcareencounter';
}

group getFullUrlemcareencounter(source src,target tgt){
    src.item first as item where linkId  =  'EmCare Encounterid' then {
        item.answer first as a, a.value as val ->  ressource = append('urn:uuid:', val) 'fuemcareencounter';
    } 'fuemcareencounter';
}

group getUrlemcareencounter(source src,target tgt){
    src.item first as item where linkId  =  'EmCare Encounterid' then {
        item.answer first as a, a.value as val ->  ressource =  append('Encounter/', val) 'uemcareencounter';
    } 'uemcareencounter';
}

group emcarerelatedpersoncaregiver(source src : questionnaireResponse,target tgt : RelatedPerson){
    src.item first as item  where linkId =  'EmCare.A.DE21'  or linkId =  'EmCare.A.DE22' or linkId =  'EmCare.A.DE23' -> tgt as target,  target.name as name then SetOfficalGivenNameemcareade21(src, name) 'emcareade21';
    src.item as item where linkId  = 'EmCare.A.DE35'  -> tgt then { item.answer first as a, a.value as val -> tgt.telecom as tel, tel.system = 'phone', tel.use ='mobile', tel.value = val 'EmCare.A.DE35-1';   } 'emcareade35';
    src.item as item where linkId  = 'EmCare.A.DE36'  -> tgt then { item.answer first as a, a.value as val -> tgt.telecom as tel, tel.system = 'phone', tel.use ='home', tel.value = val 'EmCare.A.DE36-1';   } 'emcareade36';
    src.item as item where linkId  = 'EmCare.A.DE37'  -> tgt then { item.answer first as a, a.value as val -> tgt.telecom as tel, tel.system = 'phone', tel.use ='work', tel.value = val 'EmCare.A.DE37-1';   } 'emcareade37';
}

group SetOfficalGivenNameemcareade21(source src,target tgt){
    src -> tgt.use = 'official' then {
        src.item as item where linkId  =  'EmCare.A.DE21'  -> tgt then {item.answer as a -> tgt.given = a 'f';} 'femcareade21';
        src.item as item where linkId  =  'EmCare.A.DE22' -> tgt then {item.answer as a -> tgt.given = a 'f';} 'memcareade21';
        src.item as item where linkId  =  'EmCare.A.DE23' -> tgt then {item.answer as a -> tgt.family = a 'f';} 'lemcareade21';
    } 'sgnemcareade21';
}

group getIdemcarerelatedpersoncaregiver(source src,target tgt){
    src.item first as item where linkId  =  'EmCare RelatedPerson Caregiverid' then {
        item.answer first as a, a.value as val ->  ressource = val 'idemcarerelatedpersoncaregiver';
    } 'iemcarerelatedpersoncaregiver';
}

group getFullUrlemcarerelatedpersoncaregiver(source src,target tgt){
    src.item first as item where linkId  =  'EmCare RelatedPerson Caregiverid' then {
        item.answer first as a, a.value as val ->  ressource = append('urn:uuid:', val) 'fuemcarerelatedpersoncaregiver';
    } 'fuemcarerelatedpersoncaregiver';
}

group getUrlemcarerelatedpersoncaregiver(source src,target tgt){
    src.item first as item where linkId  =  'EmCare RelatedPerson Caregiverid' then {
        item.answer first as a, a.value as val ->  ressource =  append('RelatedPerson/', val) 'uemcarerelatedpersoncaregiver';
    } 'uemcarerelatedpersoncaregiver';
}

group emcarecommunicationrequest(source src : questionnaireResponse,target tgt : CommunicationRequest){
    src.item as item where linkId  = 'EmCare.A.DE38'  -> tgt then { item.answer first as a, a.value as val -> tgt.medium = 'https://fhir.dk.swisstph-mis.ch/matchbox/fhir/CodeSystem/emcare-custom-codes', tgt.recipient  as recipient then { src.item as item where linkId  =  'emcarecommunicationrequestid', item.answer first as a, a.value as val -> recipient = val 'r1';} 'EmCare.A.DE38-1';   } 'emcareade38';
}

group getIdemcarecommunicationrequest(source src,target tgt){
    src.item first as item where linkId  =  'EmCare CommunicationRequestid' then {
        item.answer first as a, a.value as val ->  ressource = val 'idemcarecommunicationrequest';
    } 'iemcarecommunicationrequest';
}

group getFullUrlemcarecommunicationrequest(source src,target tgt){
    src.item first as item where linkId  =  'EmCare CommunicationRequestid' then {
        item.answer first as a, a.value as val ->  ressource = append('urn:uuid:', val) 'fuemcarecommunicationrequest';
    } 'fuemcarecommunicationrequest';
}

group getUrlemcarecommunicationrequest(source src,target tgt){
    src.item first as item where linkId  =  'EmCare CommunicationRequestid' then {
        item.answer first as a, a.value as val ->  ressource =  append('CommunicationRequest/', val) 'uemcarecommunicationrequest';
    } 'uemcarecommunicationrequest';
}


{
    "resourceType": "Library",
    "id": "emcareb23classificationm",
    "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareb23classificationm",
    "identifier": [
        {
            "use": "official",
            "value": "emcare.b23.classification.m"
        }
    ],
    "version": "1.0.1.rc12.build.308",
    "name": "emcareb23classificationm",
    "title": "EmCare.B23.Classification.m",
    "status": "active",
    "type": {
        "coding": [
            {
                "system": "http://hl7.org/fhir/ValueSet/library-type",
                "code": "logic-library"
            }
        ]
    },
    "relatedArtifact": [
        {
            "type": "depends-on",
            "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarebase"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareobservation"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarevalueset"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarezscore"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/weightforage"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/anthrobase"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/weightforlength"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/weightforheight"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarecombineddataelements"
        }
    ],
    "parameter": [
        {
            "name": "ageindays",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "ageinmonths",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "measured temperature (second measurement)",
            "use": "out",
            "type": "Quantity"
        },
        {
            "name": "dl-g-cl2-04-08",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-04",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-06",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-07",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-08",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-05",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-10",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-11",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-12",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-26",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-13-14",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-13",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-13a",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-14",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-15-43",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-17",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-18",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-19",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-25",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-i-cl2-04-30",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-i-cl2-04-29",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-i-cl2-04",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-29",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-30",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-32",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-42",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-i-cl2-04-42",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "dl-g-cl2-50",
            "use": "out",
            "type": "boolean"
        }
    ],
    "content": [
        {
            "id": "ig-loader-emcareb23classificationm.cql",
            "contentType": "text/cql",
            "data": ""
        }
    ]
}
{
    "resourceType": "Library",
    "id": "EmCareBase",
    "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarebase",
    "version": "0.99.99",
    "name": "EmCareBase",
    "title": "EmCareBase",
    "status": "active",
    "type": {
        "coding": [
            {
                "system": "http://hl7.org/fhir/ValueSet/library-type",
                "code": "logic-library"
            }
        ]
    },
    "relatedArtifact": [
        {
            "type": "depends-on",
            "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        }
    ],
    "dataRequirement": [
        {
            "type": "Patient",
            "profile": [
                "http://hl7.org/fhir/StructureDefinition/Patient"
            ]
        },
        {
            "type": "Observation",
            "profile": [
                "http://hl7.org/fhir/StructureDefinition/Observation"
            ]
        },
        {
            "type": "Encounter",
            "profile": [
                "http://hl7.org/fhir/StructureDefinition/Encounter"
            ]
        }
    ],
    "content": [
        {
            "id": "ig-loader-EmCareBase.cql",
            "contentType": "text/cql",
            "data": "LyoKQGF1dGhvcjogUGF0cmljayBEZWxjcm9peApAZGVzY3JpcHRpb246IFRoaXMgbGlicmFyeSBpcyBwYXJ0IG9mIHRoZSBwcm9qZWN0IEVtQ2FyZSBQcm9qZWN0LCBpdHMgYWxsb3dzIHN0YW5kYXJkaXNhdGlvbiBmb3IgdGhlIG9ic2VydmF0aW9uIHByb2Nlc3NpbmcKKi8KCmxpYnJhcnkgRW1DYXJlQmFzZSB2ZXJzaW9uICcwLjk5Ljk5JwoKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScKCmluY2x1ZGUgRkhJUkhlbHBlcnMgdmVyc2lvbiAnNC4wLjEnCgoKY29udGV4dCBFbmNvdW50ZXIKCi8vICoqKioqKioqKioqKioqKioqKioqKiAgIFBhdGllbnRIYXNPYnNlcnZhdGlvbkR1cmluZ0VuY291bnRlciAqKioqKioqKioqKioqKioqKioqKiovCi8vIG9icyBhbmQgdmFsdWUgOiByZXR1cm4gdmFsdWUKLy8gb2JzIGFuZCBubyB2YWx1ZTogcmV0dXJuIHRydWUKLy8gb2JzIGNhbmNlbGxlZCAobm90IGZvdW5kKSA6IHJldHVybiBmYWxzZQovLyBvYnMgbm90IGZvdW5kIDogcmV0dXJuIG51bGwKCmRlZmluZSAiWWVzIjoKICBjb2RpbmcoJ3llcycsICdodHRwczovL2ZoaXIuZGsuc3dpc3N0cGgtbWlzLmNoL21hdGNoYm94L2ZoaXIvJykKCmRlZmluZSAiTm8iOgogIGNvZGluZygnbm8nLCAnaHR0cHM6Ly9maGlyLmRrLnN3aXNzdHBoLW1pcy5jaC9tYXRjaGJveC9maGlyLycpCgpkZWZpbmUgZnVuY3Rpb24gYXNzZXNPYnNlcnZhdGlvbihPIE9ic2VydmF0aW9uKToKICBjYXNlICAKICAgICAgd2hlbiAgTyA9IG51bGwgdGhlbiBudWxsCiAgICAgIHdoZW4gIE8uc3RhdHVzIGluICB7J2NhbmNlbGxlZCd9IHRoZW4gIk5vIgogICAgICB3aGVuIE8udmFsdWUgaXMgbnVsbCB0aGVuICAiWWVzIgogICAgICB3aGVuIE8udmFsdWUgaXMgRkhJUi5ib29sZWFuIGFuZCBPLnZhbHVlID0gdHJ1ZSB0aGVuICJZZXMiCiAgICAgIHdoZW4gTy52YWx1ZSBpcyBGSElSLmJvb2xlYW4gYW5kIE8udmFsdWUgPSBmYWxzZSB0aGVuICJObyIKICAgICAgZWxzZSBPLnZhbHVlCiAgZW5kCiAgICAgIApkZWZpbmUgZnVuY3Rpb24gR2V0T2JzZXJ2YXRpb25EdXJpbmdFbmNvdW50ZXIoaWRsaXN0IExpc3Q8Y29kZT4sIGNvZGVzeXN0ZW0gRkhJUi51cmwpOgogIGlmIEV4aXN0cyhHZXRPYnNlcnZhdGlvbkR1cmluZ0VuY291bnRlckRvbmUoaWRsaXN0ICwgY29kZXN5c3RlbSAgKSkgdGhlbiAKICAgICAgR2V0T2JzZXJ2YXRpb25EdXJpbmdFbmNvdW50ZXJEb25lKGlkbGlzdCAsIGNvZGVzeXN0ZW0gICkKICBlbHNlCiAgICBHZXRPYnNlcnZhdGlvbkR1cmluZ0VuY291bnRlck5vdEZvdW5kKGlkbGlzdCAsIGNvZGVzeXN0ZW0gICkKCgpkZWZpbmUgZnVuY3Rpb24gR2V0T2JzZXJ2YXRpb25EdXJpbmdFbmNvdW50ZXJEb25lKGlkbGlzdCBMaXN0PGNvZGU+LCBjb2Rlc3lzdGVtIEZISVIudXJsKToKICAgICAgTGFzdChbT2JzZXJ2YXRpb24gXSBPCiAgICAgICAgd2hlcmUgTGFzdChTcGxpdChPLmVuY291bnRlci5yZWZlcmVuY2UsICcvJykpID0gRW5jb3VudGVyLmlkCiAgICAgICAgYW5kIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJ30KICAgICAgICBhbmQgZXhpc3RzKE8uY29kZS5jb2RpbmcgQyB3aGVyZSBDLmNvZGUgaW4gaWRsaXN0IAogICAgICAgIGFuZCBDLnN5c3RlbSA9IGNvZGVzeXN0ZW0pKQoKCmRlZmluZSBmdW5jdGlvbiBHZXRPYnNlcnZhdGlvbkR1cmluZ0VuY291bnRlck5vdEZvdW5kKGlkbGlzdCBMaXN0PGNvZGU+LCBjb2Rlc3lzdGVtIEZISVIudXJsKToKICAgICAgTGFzdChbT2JzZXJ2YXRpb25dIE8KICAgICAgICB3aGVyZSBMYXN0KFNwbGl0KE8uZW5jb3VudGVyLnJlZmVyZW5jZSwgJy8nKSkgPSBFbmNvdW50ZXIuaWQKICAgICAgICAgIGFuZCBPLnN0YXR1cyBpbiB7J2NhbmNlbGxlZCd9CiAgICAgICAgICBhbmQgZXhpc3RzKE8uY29kZS5jb2RpbmcgQyB3aGVyZSBDLmNvZGUgaW4gaWRsaXN0IAogICAgICAgICAgYW5kIEMuc3lzdGVtID0gY29kZXN5c3RlbSkpCgpkZWZpbmUgZnVuY3Rpb24gR2V0TnVtYmVyT2JzZXJ2YXRpb25EdXJpbmdFbmNvdW50ZXIoaWRsaXN0IExpc3Q8Y29kZT4sIGNvZGVzeXN0ZW0gRkhJUi51cmwpOgogIENvdW50KAogICAgW09ic2VydmF0aW9uXSBPCiAgICAgICAgd2hlcmUgTGFzdChTcGxpdChPLmVuY291bnRlci5yZWZlcmVuY2UsICcvJykpID0gRW5jb3VudGVyLmlkCiAgICAgICAgYW5kIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJ30KICAgICAgICBhbmQgZXhpc3RzKChPLmNvZGUuY29kaW5nIEMgd2hlcmUgQy5jb2RlIGluIGlkbGlzdCAKICAgICAgICBhbmQgQy5zeXN0ZW0gPSBjb2Rlc3lzdGVtKSkpCgpkZWZpbmUgZnVuY3Rpb24gSGFzT2JzKGlkbGlzdCBMaXN0PEZISVIuY29kZT4sIGNvZGVzeXN0ZW0gU3lzdGVtLlN0cmluZyk6CiAgICBhc3Nlc09ic2VydmF0aW9uKEdldE9ic2VydmF0aW9uRHVyaW5nRW5jb3VudGVyKGlkbGlzdCwgVG9VcmwoY29kZXN5c3RlbSkpKQoKZGVmaW5lIGZ1bmN0aW9uIEhhc09icyhpZCBGSElSLmNvZGUsIGNvZGVzeXN0ZW0gU3lzdGVtLlN0cmluZyk6CiAgICBhc3Nlc09ic2VydmF0aW9uKEdldE9ic2VydmF0aW9uRHVyaW5nRW5jb3VudGVyKHtpZH0sIFRvVXJsKGNvZGVzeXN0ZW0pKSkKCmRlZmluZSBmdW5jdGlvbiBIYXNPYnMoaWQgU3lzdGVtLlN0cmluZywgY29kZXN5c3RlbSBTeXN0ZW0uU3RyaW5nKToKICAgIGFzc2VzT2JzZXJ2YXRpb24oR2V0T2JzZXJ2YXRpb25EdXJpbmdFbmNvdW50ZXIoe2MoaWQpfSwgVG9VcmwoY29kZXN5c3RlbSkpKQoKZGVmaW5lIGZ1bmN0aW9uIEhhc09icyhpZCBTeXN0ZW0uU3RyaW5nKToKICAgIGFzc2VzT2JzZXJ2YXRpb24oR2V0T2JzZXJ2YXRpb25EdXJpbmdFbmNvdW50ZXIoe2MoaWQpfSwgVG9VcmwoJ2h0dHBzOi8vZmhpci5kay5zd2lzc3RwaC1taXMuY2gvbWF0Y2hib3gvZmhpci8nKSkpCgoKCmRlZmluZSBmdW5jdGlvbiBHZXRIaXN0b3JpY09ic2VydmF0aW9uKGlkbGlzdCBMaXN0PGNvZGU+LCBjb2Rlc3lzdGVtIEZISVIudXJsLCBuYmRheXMgSW50ZWdlcik6CiAgaWYgRXhpc3RzKEdldEhpc3RvcmljT2JzZXJ2YXRpb25Ob3Rmb3VuZChpZGxpc3QgLCBjb2Rlc3lzdGVtICwgbmJkYXlzICkpIHRoZW4gCiAgICAgIEdldEhpc3RvcmljT2JzZXJ2YXRpb25Ob3Rmb3VuZChpZGxpc3QgLCBjb2Rlc3lzdGVtICwgbmJkYXlzICkKICBlbHNlCiAgICBHZXRIaXN0b3JpY09ic2VydmF0aW9uTm90Zm91bmQoaWRsaXN0ICwgY29kZXN5c3RlbSAsIG5iZGF5cyApCgpkZWZpbmUgZnVuY3Rpb24gR2V0SGlzdG9yaWNPYnNlcnZhdGlvbkRvbmUoaWRsaXN0IExpc3Q8Y29kZT4sIGNvZGVzeXN0ZW0gRkhJUi51cmwsIG5iZGF5cyBJbnRlZ2VyKToKICAgICAgTGFzdChbT2JzZXJ2YXRpb25dIE8KICAgICAgICB3aGVyZSAgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnfQogICAgICAgIGFuZCBkaWZmZXJlbmNlIGluIGRheXMgYmV0d2VlbiBPLmlzc3VlZCBhbmQgVG9kYXkoKSA8IG5iZGF5cwogICAgICAgIGFuZCBleGlzdHMoTy5jb2RlLmNvZGluZyBDIHdoZXJlIEMuY29kZSBpbiBpZGxpc3QgCiAgICAgICAgYW5kIEMuc3lzdGVtID0gY29kZXN5c3RlbSkpCgpkZWZpbmUgZnVuY3Rpb24gR2V0SGlzdG9yaWNPYnNlcnZhdGlvbk5vdGZvdW5kKGlkbGlzdCBMaXN0PGNvZGU+LCBjb2Rlc3lzdGVtIEZISVIudXJsLCBuYmRheXMgSW50ZWdlcik6CiAgICAgIExhc3QoW09ic2VydmF0aW9uXSBPCiAgICAgICAgd2hlcmUgIE8uc3RhdHVzIGluIHsnY2FuY2VsbGVkJ30KICAgICAgICAgIGFuZCBkaWZmZXJlbmNlIGluIGRheXMgYmV0d2VlbiBPLmlzc3VlZCBhbmQgVG9kYXkoKSA8IG5iZGF5cwogICAgICAgICAgYW5kIGV4aXN0cyhPLmNvZGUuY29kaW5nIEMgd2hlcmUgQy5jb2RlIGluIGlkbGlzdCAKICAgICAgICAgIGFuZCBDLnN5c3RlbSA9IGNvZGVzeXN0ZW0pKQogIAovLyAqKioqKioqKioqKioqKioqKioqKioqKiogICBQYXRpZW50SGFzSGlzdG9yeU9mT2JzZXJ2YXRpb24gKioqKioqKioqKioqKioqKioqKioqKioqLwoKCmRlZmluZSBmdW5jdGlvbiBIYXNPYnNIaXN0b3J5KGlkbGlzdCBMaXN0PEZISVIuY29kZT4sIGNvZGVzeXN0ZW0gU3lzdGVtLlN0cmluZywgbmJkYXlzIEludGVnZXIpOgogIGFzc2VzT2JzZXJ2YXRpb24oR2V0SGlzdG9yaWNPYnNlcnZhdGlvbihpZGxpc3QsIFRvVXJsKGNvZGVzeXN0ZW0pLCBuYmRheXMpKQoKCmRlZmluZSBmdW5jdGlvbiBIYXNPYnNIaXN0b3J5KGlkIEZISVIuY29kZSwgY29kZXN5c3RlbSBTeXN0ZW0uU3RyaW5nLCBuYmRheXMgSW50ZWdlcik6CiAgYXNzZXNPYnNlcnZhdGlvbihHZXRIaXN0b3JpY09ic2VydmF0aW9uKHtpZH0sIFRvVXJsKGNvZGVzeXN0ZW0pLCBuYmRheXMpKQoKZGVmaW5lIGZ1bmN0aW9uIEhhc09ic0hpc3RvcnkoaWQgU3lzdGVtLlN0cmluZywgY29kZXN5c3RlbSBTeXN0ZW0uU3RyaW5nLCBuYmRheXMgSW50ZWdlcik6CiAgYXNzZXNPYnNlcnZhdGlvbihHZXRIaXN0b3JpY09ic2VydmF0aW9uKHtjKGlkKX0sIFRvVXJsKGNvZGVzeXN0ZW0pLCBuYmRheXMpKQoKCmRlZmluZSBmdW5jdGlvbiBIYXNPYnNIaXN0b3J5KGlkIFN5c3RlbS5TdHJpbmcsIG5iZGF5cyBJbnRlZ2VyKToKICBhc3Nlc09ic2VydmF0aW9uKEdldEhpc3RvcmljT2JzZXJ2YXRpb24oe2MoaWQpfSwgVG9VcmwoJ2h0dHBzOi8vZmhpci5kay5zd2lzc3RwaC1taXMuY2gvbWF0Y2hib3gvZmhpci8nKSwgbmJkYXlzKSkKCmRlZmluZSBmdW5jdGlvbiBjKHMgU3lzdGVtLlN0cmluZyk6CiAgRkhJUi5jb2RlIHsgdmFsdWU6IHMgfQoKZGVmaW5lIGZ1bmN0aW9uIGNvZGluZyhzIFN5c3RlbS5TdHJpbmcsIHVybCBTeXN0ZW0uU3RyaW5nKToKICBGSElSLkNvZGluZyB7CiAgICAgICAgICAgICAgICBjb2RlOiBGSElSLmNvZGUgeyB2YWx1ZTogcyB9LAogICAgICAgICAgICAgICAgc3lzdGVtOiBGSElSLnVyaSB7IHZhbHVlOiB1cmwgfSwKICAgICAgICAgICAgICAgICJkaXNwbGF5IjogRkhJUi5zdHJpbmcgeyB2YWx1ZTogcyB9CiAgICAgICAgICAgIH0KCmRlZmluZSBmdW5jdGlvbiBUb1VybChzIFN5c3RlbS5TdHJpbmcpOgogIHVybCB7dmFsdWU6c30KCi8vZGVmaW5lIGZ1bmN0aW9uIFBhdGllbnRIYXNDb25kaXRpb25EdXJpbmdFbmNvdW50ZXIoaWQgU3RyaW5nLCBjb2Rlc3lzdGVtIHVybCwgZHVyYXRpb24gSW50ZWdlcikpOgoKLy9kZWZpbmUgZnVuY3Rpb24gUGF0aWVudEhhc0NvbmRpdGlvbkZyb21WYWx1ZVNldER1cmluZ0VuY291bnRlcihpZCBTdHJpbmcsIGNvZGVzeXN0ZW0gdXJsLCBkdXJhdGlvbiBJbnRlZ2VyKSk6CgovL2RlZmluZSBmdW5jdGlvbiBQYXRpZW50SGFzSHNpc3RvcnlDb25kaXRpb24oaWQgU3RyaW5nLGNvZGVzeXN0ZW0gdXJsICwgZHVyYXRpb24gSW50ZWdlcik6Ci8vZGVmaW5lIGZ1bmN0aW9uIFBhdGllbnRIYXNIc2lzdG9yeUNvbmRpdGlvbkZyb21WYWx1ZVNldChpZCBTdHJpbmcsY29kZXN5c3RlbSB1cmwgLCBkdXJhdGlvbiBJbnRlZ2VyKToKCgovLyBQYXRpZW50SGFzU3ltcHRvbSgic3ltcHRvbSBuYW1lIik6IHN5bXB0b20gaW4gdGhlIGVuY291bnRlcgoKCi8vIFBhdGllbnRMYXN0TWVhc3VyZU9mKCJtZWFzdXJlIG5hbWUiKTogbWVhc3VyZSBpbiB0aGUgZW5jb3VudGVyCgovLyBQYXRpZW50TGFzdEhpc3RvcmljTWVhc3VyZU9mKCJtZWFzdXJlIG5hbWUiLCBkdXJhdGlvbik6IG1lYXN1cmUgaW4gdGhlIHBhdGllbnQgaGlzdG9yeSBkdXJpbmcgZHVyYXRpb24KCi8vIFBhdGllbnRIYXNEaWFnbm9zdGljKCJEaWFnbm9zdGljIG5hbWUiICk6IERpYWdub3N0aWMgaW4gdGhlIGVuY291bnRlcgoKLy8gUGF0aWVudEhhc0hpc3RvcnlPZkRpYWdub3N0aWMoIkRpYWdub3N0aWMgbmFtZSIsIGR1cmF0aW9uICk6IERpYWdub3N0aWMgaW4gdGhlIHBhdGllbnQgaGlzdG9yeSBkdXJpbmcgZHVyYXRpb24KCi8vIFBhdGllbnRIYXNQcm9wb3NlZG9yQ29uZmlybWVkRGlhbm9zdGljKCJEaWFnbm9zdGljIG5hbWUiICk6IERpYWdub3N0aWMgaW4gdGhlIGVuY291bnRlcgoKLy8gUGF0aWVudEhhc0hpc3RvcnlPZlByb3Bvc2Vkb3JDb25maXJtZWREaWFub3N0aWMoIkRpYWdub3N0aWMgbmFtZSIsIGR1cmF0aW9uICk6IERpYWdub3N0aWMgaW4gdGhlIHBhdGllbnQgaGlzdG9yeSBkdXJpbmcgZHVyYXRpb24KCi8vIFBhdGllbnRaU2NvcmVXZkEod2llZ2h0LCBhZ2UpCgovLyBQYXRpZW50V2VpZ2h0RnJvbVdmQShhZ2UsIE11YWMpCg=="
        }
    ]
}
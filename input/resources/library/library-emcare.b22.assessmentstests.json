{
    "resourceType": "Library",
    "id": "emcareb22assessmentstests",
    "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareb22assessmentstests",
    "identifier": [
        {
            "use": "official",
            "value": "emcare.b22.assessmentstests"
        }
    ],
    "version": "1.0.1.rc11.build.71",
    "name": "emcareb22assessmentstests",
    "title": "EmCare.B22.AssessmentsTests",
    "status": "active",
    "type": {
        "coding": [
            {
                "system": "http://hl7.org/fhir/ValueSet/library-type",
                "code": "logic-library"
            }
        ]
    },
    "relatedArtifact": [
        {
            "type": "depends-on",
            "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarebase"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareobservation"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarevalueset"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarecombineddataelements"
        }
    ],
    "parameter": [
        {
            "name": "ageinmonths",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "age auto-calculated (presented as number of years, months, days) of the client based on date of birth or estimated age or based on auto-calculation from estimaged date of birth",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "ageindays",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "applicability-breastfeedingtest",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "applicability-respiratoryrate",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "applicability-bronchodilatortest",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "applicability-hemoglobin",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "applicability-secondtemperature",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "applicability-fluidtest",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "respiratory rate profile",
            "use": "out",
            "type": "Quantity"
        },
        {
            "name": "respiratory rate second count profile",
            "use": "out",
            "type": "Quantity"
        },
        {
            "name": "test",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "danger signs",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "emcare.b7.de09",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "emcare.b7.de10",
            "use": "out",
            "type": "boolean"
        }
    ],
    "content": [
        {
            "id": "ig-loader-emcareb22assessmentstests.cql",
            "contentType": "text/cql",
            "data": "LyoKQGF1dGhvcjogUGF0cmljayBEZWxjcm9peApAZGVzY3JpcHRpb246IFRoaXMgbGlicmFyeSBpcyBwYXJ0IG9mIHRoZSBwcm9qZWN0IEVtQ2FyZQoqLwpsaWJyYXJ5IGVtY2FyZWIyMmFzc2Vzc21lbnRzdGVzdHMgdmVyc2lvbiAnMS4wLjEucmMxMS5idWlsZC43MScKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScKaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICc0LjAuMScgY2FsbGVkIEZISVJIZWxwZXJzIAppbmNsdWRlIGVtY2FyZWJhc2UgdmVyc2lvbiAnMS4wLjEucmMxMS5idWlsZC43MScgY2FsbGVkIEJhc2UKaW5jbHVkZSBlbWNhcmVvYnNlcnZhdGlvbiB2ZXJzaW9uICcxLjAuMS5yYzExLmJ1aWxkLjcxJyBjYWxsZWQgb2JzCmluY2x1ZGUgZW1jYXJldmFsdWVzZXQgdmVyc2lvbiAnMS4wLjEucmMxMS5idWlsZC43MScgY2FsbGVkIHZhbAppbmNsdWRlIGVtY2FyZWNvbWJpbmVkZGF0YWVsZW1lbnRzIHZlcnNpb24gJzEuMC4xLnJjMTEuYnVpbGQuNzEnIGNhbGxlZCBjCgoKCgpjb250ZXh0IFBhdGllbnQKCgovKiAKYWdlaW5tb250aHMgOiBuYW4KICAgIEFnZUluTW9udGhzKCkKKi8KZGVmaW5lICJhZ2Vpbm1vbnRocyI6CiAgICBBZ2VJbk1vbnRocygpCgovKiAKYWdlaW5kYXlzIDogbmFuCiAgICBBZ2VJbkRheXMoKQoqLwpkZWZpbmUgImFnZWluZGF5cyI6CiAgICBBZ2VJbkRheXMoKQoKLyogCmFwcGxpY2FiaWxpdHktYnJlYXN0ZmVlZGluZ3Rlc3QgOiBuYW4KICAgIEJhc2UuIlBlcnNvbiBhY2NvbXBhbnlpbmcgY2hpbGQgdG9kYXkncyBSZWxhdGlvbnNoaXAgdG8gQ2xpZW50Ii5jb2Rpbmcud2hlcmUoY29kZSA9ICdNVEgnKS5leGlzdHMoKQoqLwpkZWZpbmUgImFwcGxpY2FiaWxpdHktYnJlYXN0ZmVlZGluZ3Rlc3QiOgogICAgQmFzZS4iUGVyc29uIGFjY29tcGFueWluZyBjaGlsZCB0b2RheSdzIFJlbGF0aW9uc2hpcCB0byBDbGllbnQiLmNvZGluZy53aGVyZShjb2RlID0gJ01USCcpLmV4aXN0cygpCgovKiAKYXBwbGljYWJpbGl0eS1yZXNwaXJhdG9yeXJhdGUgOiBuYW4KICAgICJDb3VnaCIgPSB0cnVlIG9yICJEaWZmaWN1bHR5IEJyZWF0aGluZyIgPSB0cnVlIG9yICJBZ2VJbk1vbnRocyI8MgoqLwpkZWZpbmUgImFwcGxpY2FiaWxpdHktcmVzcGlyYXRvcnlyYXRlIjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMTBTMS5ERTA1JykgPSB0cnVlIG9yIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMTBTMS5ERTAxJykgPSB0cnVlIG9yICJhZ2Vpbm1vbnRocyI8MgoKLyogCmFwcGxpY2FiaWxpdHktYnJvbmNob2RpbGF0b3J0ZXN0IDogbmFuCiAgICAoIkNvdWdoIiA9IHRydWUgb3IgIkRpZmZpY3VsdHkgQnJlYXRoaW5nIiA9IHRydWUpIGFuZCAiV2hlZXppbmciID0gdHJ1ZSBhbmQgKG8iRmFzdCBCcmVhdGhpbmciID0gdHJ1ZSBvciAiQ2hlc3QgSW5kcmF3aW5nIiA9IHRydWUpIGFuZCAgYy4iZGFuZ2VyIHNpZ25zIiA9IGZhbHNlIGFuZCAiU3RyaWRvciBpbiBhIGNhbG0gY2hpbGQiPSBmYWxzZSBhbmQgIk94eWdlbiBTYXR1cmF0aW9uIiA+PSA5MCAnJScKKi8KZGVmaW5lICJhcHBsaWNhYmlsaXR5LWJyb25jaG9kaWxhdG9ydGVzdCI6CiAgICAoQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIxMFMxLkRFMDUnKSA9IHRydWUgb3IgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIxMFMxLkRFMDEnKSA9IHRydWUpIGFuZCBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjEwUzIuREUwNScpID0gdHJ1ZSBhbmQgKEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMjIuREUwNycpID0gdHJ1ZSBvciBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjEwUzIuREUwMycpID0gdHJ1ZSkgYW5kICBjLiJkYW5nZXIgc2lnbnMiID0gZmFsc2UgYW5kIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMTBTMi5ERTA0Jyk9IGZhbHNlIGFuZCBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjEwUzIuREUwNycpID49IDkwICclJwoKLyogCmFwcGxpY2FiaWxpdHktaGVtb2dsb2JpbiA6IG5hbgogICAgIlBhbG1hciBwYWxsb3IiID0gIlNvbWUgcGFsbWFyIHBhbGxvciIgb3IgIlBhbG1hciBQYWxsb3IiID0gIlNldmVyZSBQYWxtYXIgUGFsbG9yIiBvciAiTXVjb3VzIG1lbWJyYW5lIHBhbGxvciIgPSAiU29tZSBtdWNvdXMgbWVtYnJhbmUgcGFsbG9yIiBvciAiTXVjb3VzIG1lbWJyYW5lIHBhbGxvciIgPSAiU2V2ZXJlIG11Y291cyBtZW1icmFuZSBwYWxsb3IiCiovCmRlZmluZSAiYXBwbGljYWJpbGl0eS1oZW1vZ2xvYmluIjoKICAgIEJhc2UuSGFzT2JzVmFsdWVDb2RlKCdFbUNhcmUuQjE1UzIuREUwMScsICdFbUNhcmUuQjE1UzIuREUwMycpIG9yIEJhc2UuSGFzT2JzVmFsdWVDb2RlKCdFbUNhcmUuQjE1UzIuREUwMScsICdFbUNhcmUuQjE1UzIuREUwMicpIG9yIEJhc2UuSGFzT2JzVmFsdWVDb2RlKCdFbUNhcmUuQjE1UzIuREUwOScsICdFbUNhcmUuQjE1UzIuREUxMScpIG9yIEJhc2UuSGFzT2JzVmFsdWVDb2RlKCdFbUNhcmUuQjE1UzIuREUwOScsICdFbUNhcmUuQjE1UzIuREUxMCcpCgovKiAKYXBwbGljYWJpbGl0eS1zZWNvbmR0ZW1wZXJhdHVyZSA6IG5hbgogICAgQ29hbGVzY2UoYy4icHNiaSBvdGhlciB0aGFuIHRlbXBlcmF0dXJlIiwgZmFsc2UpID0gZmFsc2UgYW5kIEFnZUluTW9udGhzKCk8MiBhbmQgIkF4aWxsYXJ5IFRlbXBlcmF0dXJlIiA+IDM4LjUgJ0NlbCcKKi8KZGVmaW5lICJhcHBsaWNhYmlsaXR5LXNlY29uZHRlbXBlcmF0dXJlIjoKICAgIENvYWxlc2NlKGMuInBzYmkgb3RoZXIgdGhhbiB0ZW1wZXJhdHVyZSIsIGZhbHNlKSA9IGZhbHNlIGFuZCBBZ2VJbk1vbnRocygpPDIgYW5kIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CNi5ERTAxJykgPiAzOC41ICdDZWwnCgovKiAKYXBwbGljYWJpbGl0eS1mbHVpZHRlc3QgOiBuYW4KICAgICJOb3QgYWJsZSB0byBkcmluayBvciBicmVhc3RmZWVkIiA9IHRydWUgb3IgIlZvbWl0aW5nIEV2ZXJ5dGhpbmciID0gdHJ1ZSBvciAiRGlhcnJob2VhIiA9IHRydWUKKi8KZGVmaW5lICJhcHBsaWNhYmlsaXR5LWZsdWlkdGVzdCI6CiAgICAibm90IGFibGUgdG8gZHJpbmsgb3IgYnJlYXN0ZmVlZCIgPSB0cnVlIG9yICJ2b21pdGluZyBldmVyeXRoaW5nIiA9IHRydWUgb3IgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIxMVMxLkRFMDEnKSA9IHRydWUKCi8qIApyZXNwaXJhdG9yeSByYXRlIHByb2ZpbGUgOiBuYW4KICAgIG8iUmVzcGlyYXRvcnkgUmF0ZSIKKi8KZGVmaW5lICJyZXNwaXJhdG9yeSByYXRlIHByb2ZpbGUiOgogICAgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIyMi5ERTAxJykKCi8qIApyZXNwaXJhdG9yeSByYXRlIHNlY29uZCBjb3VudCBwcm9maWxlIDogbmFuCiAgICBvIlJlc3BpcmF0b3J5IFJhdGUgU2Vjb25kIENvdW50IgoqLwpkZWZpbmUgInJlc3BpcmF0b3J5IHJhdGUgc2Vjb25kIGNvdW50IHByb2ZpbGUiOgogICAgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIyMi5ERTA0JykKCi8qIAp0ZXN0IDogbmFuCiAgICBIYXNPYnNWYWx1ZUNvZGUoJ0VtQ2FyZS5CMTFTMi5ERTAyJywgJ0VtQ2FyZS5CMjBTMi5ERTA0JykKKi8KZGVmaW5lICJ0ZXN0IjoKICAgIEJhc2UuSGFzT2JzVmFsdWVDb2RlKCdFbUNhcmUuQjExUzIuREUwMicsICdFbUNhcmUuQjIwUzIuREUwNCcpCgovKiAKZGFuZ2VyIHNpZ25zIDogbmFuCiAgICBDb2FsZXNjZShjLiJlbWNhcmUuYi5nLmRlMDEiLCBmYWxzZSkKKi8KZGVmaW5lICJkYW5nZXIgc2lnbnMiOgogICAgQ29hbGVzY2UoYy4iZW1jYXJlLmIuZy5kZTAxIiwgZmFsc2UpCgovKiAKZW1jYXJlLmI3LmRlMDkgOiBOb3QgYWJsZSB0byBkcmluayBvciBicmVhc3RmZWVkCiAgICBDb2FsZXNjZShvIk5vdCBhYmxlIHRvIGRyaW5rIG9yIGJyZWFzdGZlZWQiLGZhbHNlKQoqLwpkZWZpbmUgImVtY2FyZS5iNy5kZTA5IjoKICAgIENvYWxlc2NlKEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CNy5ERTA5JyksZmFsc2UpCgovKiBhbGlhcyBub3QgYWJsZSB0byBkcmluayBvciBicmVhc3RmZWVkIDogZW1jYXJlLmI3LmRlMDkqLwpkZWZpbmUgIm5vdCBhYmxlIHRvIGRyaW5rIG9yIGJyZWFzdGZlZWQiOgogICAgImVtY2FyZS5iNy5kZTA5IgoKLyogCmVtY2FyZS5iNy5kZTEwIDogVm9taXRpbmcgRXZlcnl0aGluZwogICAgQ29hbGVzY2UobyJWb21pdGluZyBFdmVyeXRoaW5nIixmYWxzZSkKKi8KZGVmaW5lICJlbWNhcmUuYjcuZGUxMCI6CiAgICBDb2FsZXNjZShCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjcuREUxMCcpLGZhbHNlKQoKLyogYWxpYXMgdm9taXRpbmcgZXZlcnl0aGluZyA6IGVtY2FyZS5iNy5kZTEwKi8KZGVmaW5lICJ2b21pdGluZyBldmVyeXRoaW5nIjoKICAgICJlbWNhcmUuYjcuZGUxMCIK"
        }
    ]
}
{
    "resourceType": "Library",
    "id": "emcareb22assessmentstests",
    "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareb22assessmentstests",
    "identifier": [
        {
            "use": "official",
            "value": "emcare.b22.assessmentstests"
        }
    ],
    "version": "1.0.1.rc12.build.308",
    "name": "emcareb22assessmentstests",
    "title": "EmCare.B22.AssessmentsTests",
    "status": "active",
    "type": {
        "coding": [
            {
                "system": "http://hl7.org/fhir/ValueSet/library-type",
                "code": "logic-library"
            }
        ]
    },
    "relatedArtifact": [
        {
            "type": "depends-on",
            "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarebase"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareobservation"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarevalueset"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarecombineddataelements"
        }
    ],
    "parameter": [
        {
            "name": "force-collection",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "ageinmonths",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "age auto-calculated (presented as number of years, months, days) of the client based on date of birth or estimated age or based on auto-calculation from estimaged date of birth",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "ageindays",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "a-breastfeedingtest",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "a-respiratoryrate",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "a-bronchodilatortest",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "a-hemoglobin",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "a-secondtemperature",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "a-fluidtest",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "respiratory rate profile",
            "use": "out",
            "type": "Quantity"
        },
        {
            "name": "respiratory rate second count profile",
            "use": "out",
            "type": "Quantity"
        },
        {
            "name": "fast breathing profile",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "oftrp",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "ds",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "emcare.b7.de09",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "emcare.b7.de10",
            "use": "out",
            "type": "boolean"
        }
    ],
    "content": [
        {
            "id": "ig-loader-emcareb22assessmentstests.cql",
            "contentType": "text/cql",
            "data": ""
        }
    ]
}
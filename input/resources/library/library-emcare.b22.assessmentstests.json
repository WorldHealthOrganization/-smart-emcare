{
    "resourceType": "Library",
    "id": "emcareb22assessmentstests",
    "url": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareb22assessmentstests",
    "identifier": [
        {
            "use": "official",
            "value": "emcare.b22.assessmentstests"
        }
    ],
    "version": "1.0.1.rc12.build.12",
    "name": "emcareb22assessmentstests",
    "title": "EmCare.B22.AssessmentsTests",
    "status": "active",
    "type": {
        "coding": [
            {
                "system": "http://hl7.org/fhir/ValueSet/library-type",
                "code": "logic-library"
            }
        ]
    },
    "relatedArtifact": [
        {
            "type": "depends-on",
            "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarebase"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcareobservation"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarevalueset"
        },
        {
            "type": "depends-on",
            "resource": "https://fhir.dk.swisstph-mis.ch/matchbox/fhir/Library/emcarecombineddataelements"
        }
    ],
    "parameter": [
        {
            "name": "ageinmonths",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "age auto-calculated (presented as number of years, months, days) of the client based on date of birth or estimated age or based on auto-calculation from estimaged date of birth",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "ageindays",
            "use": "out",
            "type": "integer"
        },
        {
            "name": "a-breastfeedingtest",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "a-respiratoryrate",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "a-bronchodilatortest",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "a-hemoglobin",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "a-secondtemperature",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "a-fluidtest",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "respiratory rate profile",
            "use": "out",
            "type": "Quantity"
        },
        {
            "name": "respiratory rate second count profile",
            "use": "out",
            "type": "Quantity"
        },
        {
            "name": "fast breathing profile",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "oftrp",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "ds",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "emcare.b7.de09",
            "use": "out",
            "type": "boolean"
        },
        {
            "name": "emcare.b7.de10",
            "use": "out",
            "type": "boolean"
        }
    ],
    "content": [
        {
            "id": "ig-loader-emcareb22assessmentstests.cql",
            "contentType": "text/cql",
            "data": "LyoKQGF1dGhvcjogUGF0cmljayBEZWxjcm9peApAZGVzY3JpcHRpb246IFRoaXMgbGlicmFyeSBpcyBwYXJ0IG9mIHRoZSBwcm9qZWN0IEVtQ2FyZQoqLwpsaWJyYXJ5IGVtY2FyZWIyMmFzc2Vzc21lbnRzdGVzdHMgdmVyc2lvbiAnMS4wLjEucmMxMi5idWlsZC4xMicKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScKaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICc0LjAuMScgY2FsbGVkIEZISVJIZWxwZXJzIAppbmNsdWRlIGVtY2FyZWJhc2UgdmVyc2lvbiAnMS4wLjEucmMxMi5idWlsZC4xMicgY2FsbGVkIEJhc2UKaW5jbHVkZSBlbWNhcmVvYnNlcnZhdGlvbiB2ZXJzaW9uICcxLjAuMS5yYzEyLmJ1aWxkLjEyJyBjYWxsZWQgb2JzCmluY2x1ZGUgZW1jYXJldmFsdWVzZXQgdmVyc2lvbiAnMS4wLjEucmMxMi5idWlsZC4xMicgY2FsbGVkIHZhbAppbmNsdWRlIGVtY2FyZWNvbWJpbmVkZGF0YWVsZW1lbnRzIHZlcnNpb24gJzEuMC4xLnJjMTIuYnVpbGQuMTInIGNhbGxlZCBjCgoKCgpjb250ZXh0IFBhdGllbnQKCgovKiAKYWdlaW5tb250aHMgOiBuYW4KICAgIEFnZUluTW9udGhzKCkKKi8KZGVmaW5lICJhZ2Vpbm1vbnRocyI6CiAgICBBZ2VJbk1vbnRocygpCgovKiAKYWdlaW5kYXlzIDogbmFuCiAgICBBZ2VJbkRheXMoKQoqLwpkZWZpbmUgImFnZWluZGF5cyI6CiAgICBBZ2VJbkRheXMoKQoKLyogCmEtYnJlYXN0ZmVlZGluZ3Rlc3QgOiBhcHBsaWNhYmlsaXR5LUJyZWFzdEZlZWRpbmdUZXN0CiAgICBCYXNlLiJQZXJzb24gYWNjb21wYW55aW5nIGNoaWxkIHRvZGF5J3MgUmVsYXRpb25zaGlwIHRvIENsaWVudCIuY29kaW5nLndoZXJlKGNvZGUgPSAnTVRIJykuZXhpc3RzKCkKKi8KZGVmaW5lICJhLWJyZWFzdGZlZWRpbmd0ZXN0IjoKICAgIEJhc2UuIlBlcnNvbiBhY2NvbXBhbnlpbmcgY2hpbGQgdG9kYXkncyBSZWxhdGlvbnNoaXAgdG8gQ2xpZW50Ii5jb2Rpbmcud2hlcmUoY29kZSA9ICdNVEgnKS5leGlzdHMoKQoKLyogYWxpYXMgYXBwbGljYWJpbGl0eS1icmVhc3RmZWVkaW5ndGVzdCA6IGEtYnJlYXN0ZmVlZGluZ3Rlc3QqLwpkZWZpbmUgImFwcGxpY2FiaWxpdHktYnJlYXN0ZmVlZGluZ3Rlc3QiOgogICAgImEtYnJlYXN0ZmVlZGluZ3Rlc3QiCgovKiAKYS1yZXNwaXJhdG9yeXJhdGUgOiBhcHBsaWNhYmlsaXR5LVJlc3BpcmF0b3J5UmF0ZQogICAgKCJDb3VnaCIgPSB0cnVlIG9yICJEaWZmaWN1bHR5IEJyZWF0aGluZyIgPSB0cnVlIG9yICJBZ2VJbk1vbnRocyI8MikgYW5kIG8iRmFzdCBCcmVhdGhpbmcgcHJvZmlsZSIuZW1wdHkoKQoqLwpkZWZpbmUgImEtcmVzcGlyYXRvcnlyYXRlIjoKICAgIChCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjEwUzEuREUwNScpID0gdHJ1ZSBvciBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjEwUzEuREUwMScpID0gdHJ1ZSBvciAiYWdlaW5tb250aHMiPDIpIGFuZCBvIkZhc3QgQnJlYXRoaW5nIHByb2ZpbGUiLmVtcHR5KCkKCi8qIGFsaWFzIGFwcGxpY2FiaWxpdHktcmVzcGlyYXRvcnlyYXRlIDogYS1yZXNwaXJhdG9yeXJhdGUqLwpkZWZpbmUgImFwcGxpY2FiaWxpdHktcmVzcGlyYXRvcnlyYXRlIjoKICAgICJhLXJlc3BpcmF0b3J5cmF0ZSIKCi8qIAphLWJyb25jaG9kaWxhdG9ydGVzdCA6IGFwcGxpY2FiaWxpdHktQnJvbmNob2RpbGF0b3JUZXN0CiAgICAoIkNvdWdoIiA9IHRydWUgb3IgIkRpZmZpY3VsdHkgQnJlYXRoaW5nIiA9IHRydWUpIGFuZCAiV2hlZXppbmciID0gdHJ1ZSBhbmQgKG8iRmFzdCBCcmVhdGhpbmciID0gdHJ1ZSBvciAiQ2hlc3QgSW5kcmF3aW5nIiA9IHRydWUpIGFuZCAgYy4iZGFuZ2VyIHNpZ25zIiAhPSB0cnVlIGFuZCAiU3RyaWRvciBpbiBhIGNhbG0gY2hpbGQiPSBmYWxzZSBhbmQgIk94eWdlbiBTYXR1cmF0aW9uIiA+PSA5MCAnJScKKi8KZGVmaW5lICJhLWJyb25jaG9kaWxhdG9ydGVzdCI6CiAgICAoQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIxMFMxLkRFMDUnKSA9IHRydWUgb3IgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIxMFMxLkRFMDEnKSA9IHRydWUpIGFuZCBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjEwUzIuREUwNScpID0gdHJ1ZSBhbmQgKEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMjIuREUwNycpID0gdHJ1ZSBvciBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjEwUzIuREUwMycpID0gdHJ1ZSkgYW5kICBDb2FsZXNjZShjLiJkYW5nZXIgc2lnbnMiLGZhbHNlKSE9dHJ1ZSBhbmQgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIxMFMyLkRFMDQnKT0gZmFsc2UgYW5kIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMTBTMi5ERTA3JykgPj0gOTAgJyUnCgovKiBhbGlhcyBhcHBsaWNhYmlsaXR5LWJyb25jaG9kaWxhdG9ydGVzdCA6IGEtYnJvbmNob2RpbGF0b3J0ZXN0Ki8KZGVmaW5lICJhcHBsaWNhYmlsaXR5LWJyb25jaG9kaWxhdG9ydGVzdCI6CiAgICAiYS1icm9uY2hvZGlsYXRvcnRlc3QiCgovKiAKYS1oZW1vZ2xvYmluIDogYXBwbGljYWJpbGl0eS1IZW1vZ2xvYmluCiAgICAiUGFsbWFyIHBhbGxvciIgPSAiU29tZSBwYWxtYXIgcGFsbG9yIiBvciAiUGFsbWFyIFBhbGxvciIgPSAiU2V2ZXJlIFBhbG1hciBQYWxsb3IiIG9yICJNdWNvdXMgbWVtYnJhbmUgcGFsbG9yIiA9ICJTb21lIG11Y291cyBtZW1icmFuZSBwYWxsb3IiIG9yICJNdWNvdXMgbWVtYnJhbmUgcGFsbG9yIiA9ICJTZXZlcmUgbXVjb3VzIG1lbWJyYW5lIHBhbGxvciIKKi8KZGVmaW5lICJhLWhlbW9nbG9iaW4iOgogICAgQmFzZS5IYXNPYnNWYWx1ZUNvZGUoJ0VtQ2FyZS5CMTVTMi5ERTAxJywgJ0VtQ2FyZS5CMTVTMi5ERTAzJykgb3IgQmFzZS5IYXNPYnNWYWx1ZUNvZGUoJ0VtQ2FyZS5CMTVTMi5ERTAxJywgJ0VtQ2FyZS5CMTVTMi5ERTAyJykgb3IgQmFzZS5IYXNPYnNWYWx1ZUNvZGUoJ0VtQ2FyZS5CMTVTMi5ERTA5JywgJ0VtQ2FyZS5CMTVTMi5ERTExJykgb3IgQmFzZS5IYXNPYnNWYWx1ZUNvZGUoJ0VtQ2FyZS5CMTVTMi5ERTA5JywgJ0VtQ2FyZS5CMTVTMi5ERTEwJykKCi8qIGFsaWFzIGFwcGxpY2FiaWxpdHktaGVtb2dsb2JpbiA6IGEtaGVtb2dsb2JpbiovCmRlZmluZSAiYXBwbGljYWJpbGl0eS1oZW1vZ2xvYmluIjoKICAgICJhLWhlbW9nbG9iaW4iCgovKiAKYS1zZWNvbmR0ZW1wZXJhdHVyZSA6IGFwcGxpY2FiaWxpdHktU2Vjb25kVGVtcGVyYXR1cmUKICAgIGMuInBzYmkgb3RoZXIgdGhhbiB0ZW1wZXJhdHVyZSIgIT0gdHJ1ZSBhbmQgQWdlSW5Nb250aHMoKTwyIGFuZCAiQXhpbGxhcnkgVGVtcGVyYXR1cmUiID4gMzguNSAnQ2VsJwoqLwpkZWZpbmUgImEtc2Vjb25kdGVtcGVyYXR1cmUiOgogICAgQ29hbGVzY2UoYy4icHNiaSBvdGhlciB0aGFuIHRlbXBlcmF0dXJlIixmYWxzZSkhPXRydWUgYW5kIEFnZUluTW9udGhzKCk8MiBhbmQgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkI2LkRFMDEnKSA+IDM4LjUgJ0NlbCcKCi8qIGFsaWFzIGFwcGxpY2FiaWxpdHktc2Vjb25kdGVtcGVyYXR1cmUgOiBhLXNlY29uZHRlbXBlcmF0dXJlKi8KZGVmaW5lICJhcHBsaWNhYmlsaXR5LXNlY29uZHRlbXBlcmF0dXJlIjoKICAgICJhLXNlY29uZHRlbXBlcmF0dXJlIgoKLyogCmEtZmx1aWR0ZXN0IDogYXBwbGljYWJpbGl0eS1GbHVpZFRlc3QKICAgICgiTm90IGFibGUgdG8gZHJpbmsgb3IgYnJlYXN0ZmVlZCIgPSB0cnVlIG9yICJWb21pdGluZyBFdmVyeXRoaW5nIiA9IHRydWUgb3IgIkRpYXJyaG9lYSIgPSB0cnVlKSBhbmQgbyJPcmFsIEZsdWlkIFRlc3QgUmVzdWx0cyIuZW1wdHkoKQoqLwpkZWZpbmUgImEtZmx1aWR0ZXN0IjoKICAgICgibm90IGFibGUgdG8gZHJpbmsgb3IgYnJlYXN0ZmVlZCIgPSB0cnVlIG9yICJ2b21pdGluZyBldmVyeXRoaW5nIiA9IHRydWUgb3IgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIxMVMxLkRFMDEnKSA9IHRydWUpIGFuZCBCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjIyLkRFMDgnKS5lbXB0eSgpCgovKiBhbGlhcyBhcHBsaWNhYmlsaXR5LWZsdWlkdGVzdCA6IGEtZmx1aWR0ZXN0Ki8KZGVmaW5lICJhcHBsaWNhYmlsaXR5LWZsdWlkdGVzdCI6CiAgICAiYS1mbHVpZHRlc3QiCgovKiAKcmVzcGlyYXRvcnkgcmF0ZSBwcm9maWxlIDogbmFuCiAgICBvIlJlc3BpcmF0b3J5IFJhdGUiCiovCmRlZmluZSAicmVzcGlyYXRvcnkgcmF0ZSBwcm9maWxlIjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMjIuREUwMScpCgovKiAKcmVzcGlyYXRvcnkgcmF0ZSBzZWNvbmQgY291bnQgcHJvZmlsZSA6IG5hbgogICAgbyJSZXNwaXJhdG9yeSBSYXRlIFNlY29uZCBDb3VudCIKKi8KZGVmaW5lICJyZXNwaXJhdG9yeSByYXRlIHNlY29uZCBjb3VudCBwcm9maWxlIjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMjIuREUwNCcpCgovKiAKZmFzdCBicmVhdGhpbmcgcHJvZmlsZSA6IG5hbgogICAgbyJGYXN0IEJyZWF0aGluZyIKKi8KZGVmaW5lICJmYXN0IGJyZWF0aGluZyBwcm9maWxlIjoKICAgIEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CMjIuREUwNycpCgovKiAKb2Z0cnAgOiBVbmFibGUgdG8gUGVyZm9ybSBPcmFsIEZsdWlkIFRlc3QgUHJvZmlsZQogICAgbyJVbmFibGUgdG8gUGVyZm9ybSBPcmFsIEZsdWlkIFRlc3QiCiovCmRlZmluZSAib2Z0cnAiOgogICAgQmFzZS5HZXRPYnNWYWx1ZSgnRW1DYXJlLkIyMi5ERTE0JykKCi8qIGFsaWFzIHVuYWJsZSB0byBwZXJmb3JtIG9yYWwgZmx1aWQgdGVzdCBwcm9maWxlIDogb2Z0cnAqLwpkZWZpbmUgInVuYWJsZSB0byBwZXJmb3JtIG9yYWwgZmx1aWQgdGVzdCBwcm9maWxlIjoKICAgICJvZnRycCIKCi8qIApkcyA6IERhbmdlciBTaWducwogICAgQ29hbGVzY2UoYy4iZGFuZ2VyIHNpZ25zIixmYWxzZSkKKi8KZGVmaW5lICJkcyI6CiAgICBDb2FsZXNjZShjLiJkYW5nZXIgc2lnbnMiLGZhbHNlKQoKLyogYWxpYXMgZGFuZ2VyIHNpZ25zIDogZHMqLwpkZWZpbmUgImRhbmdlciBzaWducyI6CiAgICAiZHMiCgovKiAKZW1jYXJlLmI3LmRlMDkgOiBOb3QgYWJsZSB0byBkcmluayBvciBicmVhc3RmZWVkCiAgICBDb2FsZXNjZShvIk5vdCBhYmxlIHRvIGRyaW5rIG9yIGJyZWFzdGZlZWQiLGZhbHNlKQoqLwpkZWZpbmUgImVtY2FyZS5iNy5kZTA5IjoKICAgIENvYWxlc2NlKEJhc2UuR2V0T2JzVmFsdWUoJ0VtQ2FyZS5CNy5ERTA5JyksZmFsc2UpCgovKiBhbGlhcyBub3QgYWJsZSB0byBkcmluayBvciBicmVhc3RmZWVkIDogZW1jYXJlLmI3LmRlMDkqLwpkZWZpbmUgIm5vdCBhYmxlIHRvIGRyaW5rIG9yIGJyZWFzdGZlZWQiOgogICAgImVtY2FyZS5iNy5kZTA5IgoKLyogCmVtY2FyZS5iNy5kZTEwIDogVm9taXRpbmcgRXZlcnl0aGluZwogICAgQ29hbGVzY2UobyJWb21pdGluZyBFdmVyeXRoaW5nIixmYWxzZSkKKi8KZGVmaW5lICJlbWNhcmUuYjcuZGUxMCI6CiAgICBDb2FsZXNjZShCYXNlLkdldE9ic1ZhbHVlKCdFbUNhcmUuQjcuREUxMCcpLGZhbHNlKQoKLyogYWxpYXMgdm9taXRpbmcgZXZlcnl0aGluZyA6IGVtY2FyZS5iNy5kZTEwKi8KZGVmaW5lICJ2b21pdGluZyBldmVyeXRoaW5nIjoKICAgICJlbWNhcmUuYjcuZGUxMCIK"
        }
    ]
}